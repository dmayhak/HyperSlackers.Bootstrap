// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static HyperSlackers.Bootstrap.Demo.Controllers.HomeController Home = new HyperSlackers.Bootstrap.Demo.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
        public static readonly string bootstrap_datepicker_min_js = Url("bootstrap-datepicker.min.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_typeahead_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.typeahead.min.js") ? Url("bootstrap.typeahead.min.js") : Url("bootstrap.typeahead.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class ckeditor {
            private const string URLPATH = "~/Scripts/ckeditor";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class adapters {
                private const string URLPATH = "~/Scripts/ckeditor/adapters";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            }
        
            public static readonly string CHANGES_html = Url("CHANGES.html");
            public static readonly string ckeditor_asp = Url("ckeditor.asp");
            public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
            public static readonly string ckeditor_pack = Url("ckeditor.pack");
            public static readonly string ckeditor_php = Url("ckeditor.php");
            public static readonly string ckeditor_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor_basic.min.js") ? Url("ckeditor_basic.min.js") : Url("ckeditor_basic.js");
            public static readonly string ckeditor_basic_source_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor_basic_source.min.js") ? Url("ckeditor_basic_source.min.js") : Url("ckeditor_basic_source.js");
            public static readonly string ckeditor_php4_php = Url("ckeditor_php4.php");
            public static readonly string ckeditor_php5_php = Url("ckeditor_php5.php");
            public static readonly string ckeditor_source_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor_source.min.js") ? Url("ckeditor_source.min.js") : Url("ckeditor_source.js");
            public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config.min.js") ? Url("config.min.js") : Url("config.js");
            public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                private const string URLPATH = "~/Scripts/ckeditor/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string spacer_gif = Url("spacer.gif");
            }
        
            public static readonly string INSTALL_html = Url("INSTALL.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lang {
                private const string URLPATH = "~/Scripts/ckeditor/lang";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_languages.min.js") ? Url("_languages.min.js") : Url("_languages.js");
                public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                public static readonly string id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/id.min.js") ? Url("id.min.js") : Url("id.js");
                public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
            }
        
            public static readonly string LICENSE_html = Url("LICENSE.html");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/ckeditor/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class a11yhelp {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string a11yhelp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/a11yhelp.min.js") ? Url("a11yhelp.min.js") : Url("a11yhelp.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/a11yhelp/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class about {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/about";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/about/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                        public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class adobeair {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/adobeair";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ajax {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/ajax";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class autogrow {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/autogrow";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class bbcode {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/bbcode";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class clipboard {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/clipboard";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/clipboard/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class colordialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/colordialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/colordialog/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string colordialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colordialog.min.js") ? Url("colordialog.min.js") : Url("colordialog.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class devtools {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/devtools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/devtools/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class dialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/dialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class div {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/div";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/div/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string div_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/div.min.js") ? Url("div.min.js") : Url("div.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class docprops {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/docprops";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/docprops/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string docprops_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/docprops.min.js") ? Url("docprops.min.js") : Url("docprops.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class find {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/find";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/find/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class flash {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/flash";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/flash/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flash.min.js") ? Url("flash.min.js") : Url("flash.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/flash/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class forms {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/forms";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/forms/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                        public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                        public static readonly string form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form.min.js") ? Url("form.min.js") : Url("form.js");
                        public static readonly string hiddenfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hiddenfield.min.js") ? Url("hiddenfield.min.js") : Url("hiddenfield.js");
                        public static readonly string radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radio.min.js") ? Url("radio.min.js") : Url("radio.js");
                        public static readonly string select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.min.js") ? Url("select.min.js") : Url("select.js");
                        public static readonly string textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textarea.min.js") ? Url("textarea.min.js") : Url("textarea.js");
                        public static readonly string textfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textfield.min.js") ? Url("textfield.min.js") : Url("textfield.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/forms/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string hiddenfield_gif = Url("hiddenfield.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframe {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string iframe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/iframe.min.js") ? Url("iframe.min.js") : Url("iframe.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/iframe/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_png = Url("placeholder.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class iframedialog {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/iframedialog";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class image {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/image";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/image/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class link {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/link";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/link/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                        public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/link/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string anchor_gif = Url("anchor.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class liststyle {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/liststyle";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/liststyle/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pagebreak {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pagebreak";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pagebreak/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pagebreak_gif = Url("pagebreak.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastefromword {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pastefromword";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class filter {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pastefromword/filter";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class pastetext {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/pastetext";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/pastetext/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string pastetext_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pastetext.min.js") ? Url("pastetext.min.js") : Url("pastetext.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class placeholder {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/placeholder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/placeholder/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/placeholder.min.js") ? Url("placeholder.min.js") : Url("placeholder.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/placeholder/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string placeholder_gif = Url("placeholder.gif");
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class preview {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/preview";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string preview_html = Url("preview.html");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class scayt {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/scayt";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/scayt/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                        public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class showblocks {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/showblocks";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/showblocks/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string block_address_png = Url("block_address.png");
                        public static readonly string block_blockquote_png = Url("block_blockquote.png");
                        public static readonly string block_div_png = Url("block_div.png");
                        public static readonly string block_h1_png = Url("block_h1.png");
                        public static readonly string block_h2_png = Url("block_h2.png");
                        public static readonly string block_h3_png = Url("block_h3.png");
                        public static readonly string block_h4_png = Url("block_h4.png");
                        public static readonly string block_h5_png = Url("block_h5.png");
                        public static readonly string block_h6_png = Url("block_h6.png");
                        public static readonly string block_p_png = Url("block_p.png");
                        public static readonly string block_pre_png = Url("block_pre.png");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class smiley {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string smiley_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smiley.min.js") ? Url("smiley.min.js") : Url("smiley.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/smiley/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string angel_smile_gif = Url("angel_smile.gif");
                        public static readonly string angry_smile_gif = Url("angry_smile.gif");
                        public static readonly string broken_heart_gif = Url("broken_heart.gif");
                        public static readonly string confused_smile_gif = Url("confused_smile.gif");
                        public static readonly string cry_smile_gif = Url("cry_smile.gif");
                        public static readonly string devil_smile_gif = Url("devil_smile.gif");
                        public static readonly string embaressed_smile_gif = Url("embaressed_smile.gif");
                        public static readonly string envelope_gif = Url("envelope.gif");
                        public static readonly string heart_gif = Url("heart.gif");
                        public static readonly string kiss_gif = Url("kiss.gif");
                        public static readonly string lightbulb_gif = Url("lightbulb.gif");
                        public static readonly string omg_smile_gif = Url("omg_smile.gif");
                        public static readonly string regular_smile_gif = Url("regular_smile.gif");
                        public static readonly string sad_smile_gif = Url("sad_smile.gif");
                        public static readonly string shades_smile_gif = Url("shades_smile.gif");
                        public static readonly string teeth_smile_gif = Url("teeth_smile.gif");
                        public static readonly string thumbs_down_gif = Url("thumbs_down.gif");
                        public static readonly string thumbs_up_gif = Url("thumbs_up.gif");
                        public static readonly string tounge_smile_gif = Url("tounge_smile.gif");
                        public static readonly string whatchutalkingabout_smile_gif = Url("whatchutalkingabout_smile.gif");
                        public static readonly string wink_smile_gif = Url("wink_smile.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class specialchar {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string specialchar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/specialchar.min.js") ? Url("specialchar.min.js") : Url("specialchar.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/specialchar/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class styles {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/styles";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class styles_ {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/styles/styles";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class stylesheetparser {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/stylesheetparser";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class table {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/table";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/table/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tableresize {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/tableresize";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class tabletools {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/tabletools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/tabletools/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string tableCell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tableCell.min.js") ? Url("tableCell.min.js") : Url("tableCell.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class templates {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/templates";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.js") ? Url("templates.min.js") : Url("templates.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class templates_ {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/templates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/templates/templates/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string template1_gif = Url("template1.gif");
                            public static readonly string template2_gif = Url("template2.gif");
                            public static readonly string template3_gif = Url("template3.gif");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class uicolor {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string uicolor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uicolor.min.js") ? Url("uicolor.min.js") : Url("uicolor.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lang {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/lang";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                        public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                        public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                        public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                        public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                        public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                        public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                        public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                        public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                        public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                        public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                        public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                        public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                        public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                        public static readonly string mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mk.min.js") ? Url("mk.min.js") : Url("mk.js");
                        public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                        public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                        public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                        public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                        public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                        public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                        public static readonly string ug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ug.min.js") ? Url("ug.min.js") : Url("ug.js");
                        public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                        public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                        public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    }
                
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    public static readonly string uicolor_gif = Url("uicolor.gif");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class yui {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/yui";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class assets {
                            private const string URLPATH = "~/Scripts/ckeditor/plugins/uicolor/yui/assets";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string hue_bg_png = Url("hue_bg.png");
                            public static readonly string hue_thumb_png = Url("hue_thumb.png");
                            public static readonly string picker_mask_png = Url("picker_mask.png");
                            public static readonly string picker_thumb_png = Url("picker_thumb.png");
                            public static readonly string yui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yui.min.css") ? Url("yui.min.css") : Url("yui.css");
                        }
                    
                        public static readonly string yui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yui.min.js") ? Url("yui.min.js") : Url("yui.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class wsc {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/wsc";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialogs {
                        private const string URLPATH = "~/Scripts/ckeditor/plugins/wsc/dialogs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ciframe_html = Url("ciframe.html");
                        public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                        public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                        public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class xml {
                    private const string URLPATH = "~/Scripts/ckeditor/plugins/xml";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class skins {
                private const string URLPATH = "~/Scripts/ckeditor/skins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class kama {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/kama";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/kama/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class office2003 {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/office2003";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/office2003/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class v2 {
                    private const string URLPATH = "~/Scripts/ckeditor/skins/v2";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                    public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                    public static readonly string icons_png = Url("icons.png");
                    public static readonly string icons_rtl_png = Url("icons_rtl.png");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Scripts/ckeditor/skins/v2/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                        public static readonly string dialog_sides_png = Url("dialog_sides.png");
                        public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                        public static readonly string mini_gif = Url("mini.gif");
                        public static readonly string noimage_png = Url("noimage.png");
                        public static readonly string sprites_png = Url("sprites.png");
                        public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                    }
                
                    public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                    public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class themes {
                private const string URLPATH = "~/Scripts/ckeditor/themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class @default {
                    private const string URLPATH = "~/Scripts/ckeditor/themes/default";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string theme_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.js") ? Url("theme.min.js") : Url("theme.js");
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables {
            private const string URLPATH = "~/Scripts/DataTables";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string autoFill_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.bootstrap.min.js") ? Url("autoFill.bootstrap.min.js") : Url("autoFill.bootstrap.js");
            public static readonly string autoFill_bootstrap_min_js = Url("autoFill.bootstrap.min.js");
            public static readonly string autoFill_foundation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.foundation.min.js") ? Url("autoFill.foundation.min.js") : Url("autoFill.foundation.js");
            public static readonly string autoFill_foundation_min_js = Url("autoFill.foundation.min.js");
            public static readonly string autoFill_jqueryui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.jqueryui.min.js") ? Url("autoFill.jqueryui.min.js") : Url("autoFill.jqueryui.js");
            public static readonly string autoFill_jqueryui_min_js = Url("autoFill.jqueryui.min.js");
            public static readonly string buttons_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.bootstrap.min.js") ? Url("buttons.bootstrap.min.js") : Url("buttons.bootstrap.js");
            public static readonly string buttons_bootstrap_min_js = Url("buttons.bootstrap.min.js");
            public static readonly string buttons_bootstrap4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.bootstrap4.min.js") ? Url("buttons.bootstrap4.min.js") : Url("buttons.bootstrap4.js");
            public static readonly string buttons_bootstrap4_min_js = Url("buttons.bootstrap4.min.js");
            public static readonly string buttons_colVis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.colVis.min.js") ? Url("buttons.colVis.min.js") : Url("buttons.colVis.js");
            public static readonly string buttons_colVis_min_js = Url("buttons.colVis.min.js");
            public static readonly string buttons_flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.flash.min.js") ? Url("buttons.flash.min.js") : Url("buttons.flash.js");
            public static readonly string buttons_flash_min_js = Url("buttons.flash.min.js");
            public static readonly string buttons_foundation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.foundation.min.js") ? Url("buttons.foundation.min.js") : Url("buttons.foundation.js");
            public static readonly string buttons_foundation_min_js = Url("buttons.foundation.min.js");
            public static readonly string buttons_html5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.html5.min.js") ? Url("buttons.html5.min.js") : Url("buttons.html5.js");
            public static readonly string buttons_html5_min_js = Url("buttons.html5.min.js");
            public static readonly string buttons_jqueryui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.jqueryui.min.js") ? Url("buttons.jqueryui.min.js") : Url("buttons.jqueryui.js");
            public static readonly string buttons_jqueryui_min_js = Url("buttons.jqueryui.min.js");
            public static readonly string buttons_print_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.print.min.js") ? Url("buttons.print.min.js") : Url("buttons.print.js");
            public static readonly string buttons_print_min_js = Url("buttons.print.min.js");
            public static readonly string dataTables_autoFill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.autoFill.min.js") ? Url("dataTables.autoFill.min.js") : Url("dataTables.autoFill.js");
            public static readonly string dataTables_autoFill_min_js = Url("dataTables.autoFill.min.js");
            public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
            public static readonly string dataTables_bootstrap_min_js = Url("dataTables.bootstrap.min.js");
            public static readonly string dataTables_bootstrap4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap4.min.js") ? Url("dataTables.bootstrap4.min.js") : Url("dataTables.bootstrap4.js");
            public static readonly string dataTables_bootstrap4_min_js = Url("dataTables.bootstrap4.min.js");
            public static readonly string dataTables_buttons_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.buttons.min.js") ? Url("dataTables.buttons.min.js") : Url("dataTables.buttons.js");
            public static readonly string dataTables_buttons_min_js = Url("dataTables.buttons.min.js");
            public static readonly string dataTables_colReorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colReorder.min.js") ? Url("dataTables.colReorder.min.js") : Url("dataTables.colReorder.js");
            public static readonly string dataTables_colReorder_min_js = Url("dataTables.colReorder.min.js");
            public static readonly string dataTables_fixedColumns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedColumns.min.js") ? Url("dataTables.fixedColumns.min.js") : Url("dataTables.fixedColumns.js");
            public static readonly string dataTables_fixedColumns_min_js = Url("dataTables.fixedColumns.min.js");
            public static readonly string dataTables_fixedHeader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedHeader.min.js") ? Url("dataTables.fixedHeader.min.js") : Url("dataTables.fixedHeader.js");
            public static readonly string dataTables_fixedHeader_min_js = Url("dataTables.fixedHeader.min.js");
            public static readonly string dataTables_foundation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.foundation.min.js") ? Url("dataTables.foundation.min.js") : Url("dataTables.foundation.js");
            public static readonly string dataTables_foundation_min_js = Url("dataTables.foundation.min.js");
            public static readonly string dataTables_jqueryui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.jqueryui.min.js") ? Url("dataTables.jqueryui.min.js") : Url("dataTables.jqueryui.js");
            public static readonly string dataTables_jqueryui_min_js = Url("dataTables.jqueryui.min.js");
            public static readonly string dataTables_keyTable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.keyTable.min.js") ? Url("dataTables.keyTable.min.js") : Url("dataTables.keyTable.js");
            public static readonly string dataTables_keyTable_min_js = Url("dataTables.keyTable.min.js");
            public static readonly string dataTables_material_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.material.min.js") ? Url("dataTables.material.min.js") : Url("dataTables.material.js");
            public static readonly string dataTables_material_min_js = Url("dataTables.material.min.js");
            public static readonly string dataTables_responsive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.responsive.min.js") ? Url("dataTables.responsive.min.js") : Url("dataTables.responsive.js");
            public static readonly string dataTables_responsive_min_js = Url("dataTables.responsive.min.js");
            public static readonly string dataTables_rowReorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.rowReorder.min.js") ? Url("dataTables.rowReorder.min.js") : Url("dataTables.rowReorder.js");
            public static readonly string dataTables_rowReorder_min_js = Url("dataTables.rowReorder.min.js");
            public static readonly string dataTables_scroller_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.js") ? Url("dataTables.scroller.min.js") : Url("dataTables.scroller.js");
            public static readonly string dataTables_scroller_min_js = Url("dataTables.scroller.min.js");
            public static readonly string dataTables_select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.select.min.js") ? Url("dataTables.select.min.js") : Url("dataTables.select.js");
            public static readonly string dataTables_select_min_js = Url("dataTables.select.min.js");
            public static readonly string dataTables_semanticui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.semanticui.min.js") ? Url("dataTables.semanticui.min.js") : Url("dataTables.semanticui.js");
            public static readonly string dataTables_semanticui_min_js = Url("dataTables.semanticui.min.js");
            public static readonly string dataTables_uikit_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.uikit.min.js") ? Url("dataTables.uikit.min.js") : Url("dataTables.uikit.js");
            public static readonly string dataTables_uikit_min_js = Url("dataTables.uikit.min.js");
            public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
            public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
            public static readonly string responsive_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.bootstrap.min.js") ? Url("responsive.bootstrap.min.js") : Url("responsive.bootstrap.js");
            public static readonly string responsive_bootstrap_min_js = Url("responsive.bootstrap.min.js");
            public static readonly string responsive_foundation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.foundation.min.js") ? Url("responsive.foundation.min.js") : Url("responsive.foundation.js");
            public static readonly string responsive_foundation_min_js = Url("responsive.foundation.min.js");
            public static readonly string responsive_jqueryui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.jqueryui.min.js") ? Url("responsive.jqueryui.min.js") : Url("responsive.jqueryui.js");
            public static readonly string responsive_jqueryui_min_js = Url("responsive.jqueryui.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_10_1 {
            private const string URLPATH = "~/Scripts/DataTables-1.10.1";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string dataTables_autoFill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.autoFill.min.js") ? Url("dataTables.autoFill.min.js") : Url("dataTables.autoFill.js");
            public static readonly string dataTables_autoFill_min_js = Url("dataTables.autoFill.min.js");
            public static readonly string dataTables_autoFill_min_js_map = Url("dataTables.autoFill.min.js.map");
            public static readonly string dataTables_colReorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colReorder.min.js") ? Url("dataTables.colReorder.min.js") : Url("dataTables.colReorder.js");
            public static readonly string dataTables_colReorder_min_js = Url("dataTables.colReorder.min.js");
            public static readonly string dataTables_colReorder_min_js_map = Url("dataTables.colReorder.min.js.map");
            public static readonly string dataTables_colVis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colVis.min.js") ? Url("dataTables.colVis.min.js") : Url("dataTables.colVis.js");
            public static readonly string dataTables_colVis_min_js = Url("dataTables.colVis.min.js");
            public static readonly string dataTables_colVis_min_js_map = Url("dataTables.colVis.min.js.map");
            public static readonly string dataTables_fixedColumns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedColumns.min.js") ? Url("dataTables.fixedColumns.min.js") : Url("dataTables.fixedColumns.js");
            public static readonly string dataTables_fixedColumns_min_js = Url("dataTables.fixedColumns.min.js");
            public static readonly string dataTables_fixedColumns_min_js_map = Url("dataTables.fixedColumns.min.js.map");
            public static readonly string dataTables_fixedHeader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedHeader.min.js") ? Url("dataTables.fixedHeader.min.js") : Url("dataTables.fixedHeader.js");
            public static readonly string dataTables_fixedHeader_min_js = Url("dataTables.fixedHeader.min.js");
            public static readonly string dataTables_fixedHeader_min_js_map = Url("dataTables.fixedHeader.min.js.map");
            public static readonly string dataTables_keyTable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.keyTable.min.js") ? Url("dataTables.keyTable.min.js") : Url("dataTables.keyTable.js");
            public static readonly string dataTables_keyTable_min_js = Url("dataTables.keyTable.min.js");
            public static readonly string dataTables_keyTable_min_js_map = Url("dataTables.keyTable.min.js.map");
            public static readonly string dataTables_responsive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.responsive.min.js") ? Url("dataTables.responsive.min.js") : Url("dataTables.responsive.js");
            public static readonly string dataTables_responsive_min_js = Url("dataTables.responsive.min.js");
            public static readonly string dataTables_responsive_min_js_map = Url("dataTables.responsive.min.js.map");
            public static readonly string dataTables_scroller_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.js") ? Url("dataTables.scroller.min.js") : Url("dataTables.scroller.js");
            public static readonly string dataTables_scroller_min_js = Url("dataTables.scroller.min.js");
            public static readonly string dataTables_scroller_min_js_map = Url("dataTables.scroller.min.js.map");
            public static readonly string dataTables_tableTools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.tableTools.min.js") ? Url("dataTables.tableTools.min.js") : Url("dataTables.tableTools.js");
            public static readonly string dataTables_tableTools_min_js = Url("dataTables.tableTools.min.js");
            public static readonly string dataTables_tableTools_min_js_map = Url("dataTables.tableTools.min.js.map");
            public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
            public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
            public static readonly string jquery_dataTables_min_js_map = Url("jquery.dataTables.min.js.map");
        }
    
        public static readonly string hyperslackers_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hyperslackers.bootstrap.min.js") ? Url("hyperslackers.bootstrap.min.js") : Url("hyperslackers.bootstrap.js");
        public static readonly string jquery_1_11_3_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.3.intellisense.min.js") ? Url("jquery-1.11.3.intellisense.min.js") : Url("jquery-1.11.3.intellisense.js");
        public static readonly string jquery_1_11_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.3.min.js") ? Url("jquery-1.11.3.min.js") : Url("jquery-1.11.3.js");
        public static readonly string jquery_1_11_3_min_js = Url("jquery-1.11.3.min.js");
        public static readonly string jquery_1_11_3_min_map = Url("jquery-1.11.3.min.map");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class locales {
            private const string URLPATH = "~/Scripts/locales";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string bootstrap_datepicker_ar_min_js = Url("bootstrap-datepicker.ar.min.js");
            public static readonly string bootstrap_datepicker_az_min_js = Url("bootstrap-datepicker.az.min.js");
            public static readonly string bootstrap_datepicker_bg_min_js = Url("bootstrap-datepicker.bg.min.js");
            public static readonly string bootstrap_datepicker_bs_min_js = Url("bootstrap-datepicker.bs.min.js");
            public static readonly string bootstrap_datepicker_ca_min_js = Url("bootstrap-datepicker.ca.min.js");
            public static readonly string bootstrap_datepicker_cs_min_js = Url("bootstrap-datepicker.cs.min.js");
            public static readonly string bootstrap_datepicker_cy_min_js = Url("bootstrap-datepicker.cy.min.js");
            public static readonly string bootstrap_datepicker_da_min_js = Url("bootstrap-datepicker.da.min.js");
            public static readonly string bootstrap_datepicker_de_min_js = Url("bootstrap-datepicker.de.min.js");
            public static readonly string bootstrap_datepicker_el_min_js = Url("bootstrap-datepicker.el.min.js");
            public static readonly string bootstrap_datepicker_en_AU_min_js = Url("bootstrap-datepicker.en-AU.min.js");
            public static readonly string bootstrap_datepicker_en_GB_min_js = Url("bootstrap-datepicker.en-GB.min.js");
            public static readonly string bootstrap_datepicker_eo_min_js = Url("bootstrap-datepicker.eo.min.js");
            public static readonly string bootstrap_datepicker_es_min_js = Url("bootstrap-datepicker.es.min.js");
            public static readonly string bootstrap_datepicker_et_min_js = Url("bootstrap-datepicker.et.min.js");
            public static readonly string bootstrap_datepicker_eu_min_js = Url("bootstrap-datepicker.eu.min.js");
            public static readonly string bootstrap_datepicker_fa_min_js = Url("bootstrap-datepicker.fa.min.js");
            public static readonly string bootstrap_datepicker_fi_min_js = Url("bootstrap-datepicker.fi.min.js");
            public static readonly string bootstrap_datepicker_fo_min_js = Url("bootstrap-datepicker.fo.min.js");
            public static readonly string bootstrap_datepicker_fr_CH_min_js = Url("bootstrap-datepicker.fr-CH.min.js");
            public static readonly string bootstrap_datepicker_fr_min_js = Url("bootstrap-datepicker.fr.min.js");
            public static readonly string bootstrap_datepicker_gl_min_js = Url("bootstrap-datepicker.gl.min.js");
            public static readonly string bootstrap_datepicker_he_min_js = Url("bootstrap-datepicker.he.min.js");
            public static readonly string bootstrap_datepicker_hr_min_js = Url("bootstrap-datepicker.hr.min.js");
            public static readonly string bootstrap_datepicker_hu_min_js = Url("bootstrap-datepicker.hu.min.js");
            public static readonly string bootstrap_datepicker_hy_min_js = Url("bootstrap-datepicker.hy.min.js");
            public static readonly string bootstrap_datepicker_id_min_js = Url("bootstrap-datepicker.id.min.js");
            public static readonly string bootstrap_datepicker_is_min_js = Url("bootstrap-datepicker.is.min.js");
            public static readonly string bootstrap_datepicker_it_CH_min_js = Url("bootstrap-datepicker.it-CH.min.js");
            public static readonly string bootstrap_datepicker_it_min_js = Url("bootstrap-datepicker.it.min.js");
            public static readonly string bootstrap_datepicker_ja_min_js = Url("bootstrap-datepicker.ja.min.js");
            public static readonly string bootstrap_datepicker_ka_min_js = Url("bootstrap-datepicker.ka.min.js");
            public static readonly string bootstrap_datepicker_kh_min_js = Url("bootstrap-datepicker.kh.min.js");
            public static readonly string bootstrap_datepicker_kk_min_js = Url("bootstrap-datepicker.kk.min.js");
            public static readonly string bootstrap_datepicker_ko_min_js = Url("bootstrap-datepicker.ko.min.js");
            public static readonly string bootstrap_datepicker_kr_min_js = Url("bootstrap-datepicker.kr.min.js");
            public static readonly string bootstrap_datepicker_lt_min_js = Url("bootstrap-datepicker.lt.min.js");
            public static readonly string bootstrap_datepicker_lv_min_js = Url("bootstrap-datepicker.lv.min.js");
            public static readonly string bootstrap_datepicker_me_min_js = Url("bootstrap-datepicker.me.min.js");
            public static readonly string bootstrap_datepicker_mk_min_js = Url("bootstrap-datepicker.mk.min.js");
            public static readonly string bootstrap_datepicker_mn_min_js = Url("bootstrap-datepicker.mn.min.js");
            public static readonly string bootstrap_datepicker_ms_min_js = Url("bootstrap-datepicker.ms.min.js");
            public static readonly string bootstrap_datepicker_nb_min_js = Url("bootstrap-datepicker.nb.min.js");
            public static readonly string bootstrap_datepicker_nl_BE_min_js = Url("bootstrap-datepicker.nl-BE.min.js");
            public static readonly string bootstrap_datepicker_nl_min_js = Url("bootstrap-datepicker.nl.min.js");
            public static readonly string bootstrap_datepicker_no_min_js = Url("bootstrap-datepicker.no.min.js");
            public static readonly string bootstrap_datepicker_pl_min_js = Url("bootstrap-datepicker.pl.min.js");
            public static readonly string bootstrap_datepicker_pt_BR_min_js = Url("bootstrap-datepicker.pt-BR.min.js");
            public static readonly string bootstrap_datepicker_pt_min_js = Url("bootstrap-datepicker.pt.min.js");
            public static readonly string bootstrap_datepicker_ro_min_js = Url("bootstrap-datepicker.ro.min.js");
            public static readonly string bootstrap_datepicker_rs_latin_min_js = Url("bootstrap-datepicker.rs-latin.min.js");
            public static readonly string bootstrap_datepicker_rs_min_js = Url("bootstrap-datepicker.rs.min.js");
            public static readonly string bootstrap_datepicker_ru_min_js = Url("bootstrap-datepicker.ru.min.js");
            public static readonly string bootstrap_datepicker_sk_min_js = Url("bootstrap-datepicker.sk.min.js");
            public static readonly string bootstrap_datepicker_sl_min_js = Url("bootstrap-datepicker.sl.min.js");
            public static readonly string bootstrap_datepicker_sq_min_js = Url("bootstrap-datepicker.sq.min.js");
            public static readonly string bootstrap_datepicker_sr_latin_min_js = Url("bootstrap-datepicker.sr-latin.min.js");
            public static readonly string bootstrap_datepicker_sr_min_js = Url("bootstrap-datepicker.sr.min.js");
            public static readonly string bootstrap_datepicker_sv_min_js = Url("bootstrap-datepicker.sv.min.js");
            public static readonly string bootstrap_datepicker_sw_min_js = Url("bootstrap-datepicker.sw.min.js");
            public static readonly string bootstrap_datepicker_th_min_js = Url("bootstrap-datepicker.th.min.js");
            public static readonly string bootstrap_datepicker_tr_min_js = Url("bootstrap-datepicker.tr.min.js");
            public static readonly string bootstrap_datepicker_uk_min_js = Url("bootstrap-datepicker.uk.min.js");
            public static readonly string bootstrap_datepicker_vi_min_js = Url("bootstrap-datepicker.vi.min.js");
            public static readonly string bootstrap_datepicker_zh_CN_min_js = Url("bootstrap-datepicker.zh-CN.min.js");
            public static readonly string bootstrap_datepicker_zh_TW_min_js = Url("bootstrap-datepicker.zh-TW.min.js");
        }
    
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Prettify {
            private const string URLPATH = "~/Scripts/Prettify";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string lang_apollo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-apollo.min.js") ? Url("lang-apollo.min.js") : Url("lang-apollo.js");
            public static readonly string lang_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-basic.min.js") ? Url("lang-basic.min.js") : Url("lang-basic.js");
            public static readonly string lang_clj_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-clj.min.js") ? Url("lang-clj.min.js") : Url("lang-clj.js");
            public static readonly string lang_css_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-css.min.js") ? Url("lang-css.min.js") : Url("lang-css.js");
            public static readonly string lang_dart_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-dart.min.js") ? Url("lang-dart.min.js") : Url("lang-dart.js");
            public static readonly string lang_erlang_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-erlang.min.js") ? Url("lang-erlang.min.js") : Url("lang-erlang.js");
            public static readonly string lang_go_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-go.min.js") ? Url("lang-go.min.js") : Url("lang-go.js");
            public static readonly string lang_hs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-hs.min.js") ? Url("lang-hs.min.js") : Url("lang-hs.js");
            public static readonly string lang_lisp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-lisp.min.js") ? Url("lang-lisp.min.js") : Url("lang-lisp.js");
            public static readonly string lang_llvm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-llvm.min.js") ? Url("lang-llvm.min.js") : Url("lang-llvm.js");
            public static readonly string lang_lua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-lua.min.js") ? Url("lang-lua.min.js") : Url("lang-lua.js");
            public static readonly string lang_matlab_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-matlab.min.js") ? Url("lang-matlab.min.js") : Url("lang-matlab.js");
            public static readonly string lang_ml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-ml.min.js") ? Url("lang-ml.min.js") : Url("lang-ml.js");
            public static readonly string lang_mumps_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-mumps.min.js") ? Url("lang-mumps.min.js") : Url("lang-mumps.js");
            public static readonly string lang_n_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-n.min.js") ? Url("lang-n.min.js") : Url("lang-n.js");
            public static readonly string lang_pascal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-pascal.min.js") ? Url("lang-pascal.min.js") : Url("lang-pascal.js");
            public static readonly string lang_proto_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-proto.min.js") ? Url("lang-proto.min.js") : Url("lang-proto.js");
            public static readonly string lang_r_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-r.min.js") ? Url("lang-r.min.js") : Url("lang-r.js");
            public static readonly string lang_rd_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-rd.min.js") ? Url("lang-rd.min.js") : Url("lang-rd.js");
            public static readonly string lang_scala_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-scala.min.js") ? Url("lang-scala.min.js") : Url("lang-scala.js");
            public static readonly string lang_sql_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-sql.min.js") ? Url("lang-sql.min.js") : Url("lang-sql.js");
            public static readonly string lang_tcl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-tcl.min.js") ? Url("lang-tcl.min.js") : Url("lang-tcl.js");
            public static readonly string lang_tex_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-tex.min.js") ? Url("lang-tex.min.js") : Url("lang-tex.js");
            public static readonly string lang_vb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-vb.min.js") ? Url("lang-vb.min.js") : Url("lang-vb.js");
            public static readonly string lang_vhdl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-vhdl.min.js") ? Url("lang-vhdl.min.js") : Url("lang-vhdl.js");
            public static readonly string lang_wiki_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-wiki.min.js") ? Url("lang-wiki.min.js") : Url("lang-wiki.js");
            public static readonly string lang_xq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-xq.min.js") ? Url("lang-xq.min.js") : Url("lang-xq.js");
            public static readonly string lang_yaml_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lang-yaml.min.js") ? Url("lang-yaml.min.js") : Url("lang-yaml.js");
            public static readonly string prettify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/prettify.min.js") ? Url("prettify.min.js") : Url("prettify.js");
            public static readonly string run_prettify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/run_prettify.min.js") ? Url("run_prettify.min.js") : Url("run_prettify.js");
        }
    
        public static readonly string respond_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.min.js") ? Url("respond.min.js") : Url("respond.js");
        public static readonly string respond_matchmedia_addListener_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.matchmedia.addListener.min.js") ? Url("respond.matchmedia.addListener.min.js") : Url("respond.matchmedia.addListener.js");
        public static readonly string respond_matchmedia_addListener_min_js = Url("respond.matchmedia.addListener.min.js");
        public static readonly string respond_min_js = Url("respond.min.js");
        public static readonly string respond_min_js_map = Url("respond.min.js.map");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.min.css") ? Url("bootstrap-datepicker.min.css") : Url("bootstrap-datepicker.css");
        public static readonly string bootstrap_datepicker_css_map = Url("bootstrap-datepicker.css.map");
        public static readonly string bootstrap_datepicker_min_css = Url("bootstrap-datepicker.min.css");
        public static readonly string bootstrap_datepicker_min_css_map = Url("bootstrap-datepicker.min.css.map");
        public static readonly string bootstrap_datepicker_standalone_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.standalone.min.css") ? Url("bootstrap-datepicker.standalone.min.css") : Url("bootstrap-datepicker.standalone.css");
        public static readonly string bootstrap_datepicker_standalone_css_map = Url("bootstrap-datepicker.standalone.css.map");
        public static readonly string bootstrap_datepicker_standalone_min_css = Url("bootstrap-datepicker.standalone.min.css");
        public static readonly string bootstrap_datepicker_standalone_min_css_map = Url("bootstrap-datepicker.standalone.min.css.map");
        public static readonly string bootstrap_datepicker3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker3.min.css") ? Url("bootstrap-datepicker3.min.css") : Url("bootstrap-datepicker3.css");
        public static readonly string bootstrap_datepicker3_css_map = Url("bootstrap-datepicker3.css.map");
        public static readonly string bootstrap_datepicker3_min_css = Url("bootstrap-datepicker3.min.css");
        public static readonly string bootstrap_datepicker3_min_css_map = Url("bootstrap-datepicker3.min.css.map");
        public static readonly string bootstrap_datepicker3_standalone_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker3.standalone.min.css") ? Url("bootstrap-datepicker3.standalone.min.css") : Url("bootstrap-datepicker3.standalone.css");
        public static readonly string bootstrap_datepicker3_standalone_css_map = Url("bootstrap-datepicker3.standalone.css.map");
        public static readonly string bootstrap_datepicker3_standalone_min_css = Url("bootstrap-datepicker3.standalone.min.css");
        public static readonly string bootstrap_datepicker3_standalone_min_css_map = Url("bootstrap-datepicker3.standalone.min.css.map");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_themes {
            private const string URLPATH = "~/Content/bootstrap-themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class amelia {
                private const string URLPATH = "~/Content/bootstrap-themes/amelia";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootswatch_less = Url("bootswatch.less");
                public static readonly string variables_less = Url("variables.less");
            }
        
            public static readonly string amelia_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/amelia.min.css") ? Url("amelia.min.css") : Url("amelia.css");
            public static readonly string amelia_css_map = Url("amelia.css.map");
            public static readonly string amelia_less = Url("amelia.less");
            public static readonly string amelia_min_css = Url("amelia.min.css");
            public static readonly string darkly_min_css = Url("darkly.min.css");
            public static readonly string default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.css") ? Url("default.min.css") : Url("default.css");
            public static readonly string default_css_map = Url("default.css.map");
            public static readonly string default_less = Url("default.less");
            public static readonly string default_min_css = Url("default.min.css");
        }
    
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootswatch {
            private const string URLPATH = "~/Content/bootswatch";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class cerulean {
                private const string URLPATH = "~/Content/bootswatch/cerulean";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class cosmo {
                private const string URLPATH = "~/Content/bootswatch/cosmo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                public static readonly string Thumbs_db = Url("Thumbs.db");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class cyborg {
                private const string URLPATH = "~/Content/bootswatch/cyborg";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class darkly {
                private const string URLPATH = "~/Content/bootswatch/darkly";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class flatly {
                private const string URLPATH = "~/Content/bootswatch/flatly";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class journal {
                private const string URLPATH = "~/Content/bootswatch/journal";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lumen {
                private const string URLPATH = "~/Content/bootswatch/lumen";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class paper {
                private const string URLPATH = "~/Content/bootswatch/paper";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class readable {
                private const string URLPATH = "~/Content/bootswatch/readable";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class sandstone {
                private const string URLPATH = "~/Content/bootswatch/sandstone";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class simplex {
                private const string URLPATH = "~/Content/bootswatch/simplex";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class slate {
                private const string URLPATH = "~/Content/bootswatch/slate";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class spacelab {
                private const string URLPATH = "~/Content/bootswatch/spacelab";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class superhero {
                private const string URLPATH = "~/Content/bootswatch/superhero";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class united {
                private const string URLPATH = "~/Content/bootswatch/united";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class yeti {
                private const string URLPATH = "~/Content/bootswatch/yeti";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables {
            private const string URLPATH = "~/Content/DataTables";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/DataTables/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string autoFill_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.bootstrap.min.css") ? Url("autoFill.bootstrap.min.css") : Url("autoFill.bootstrap.css");
                public static readonly string autoFill_bootstrap_min_css = Url("autoFill.bootstrap.min.css");
                public static readonly string autoFill_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.dataTables.min.css") ? Url("autoFill.dataTables.min.css") : Url("autoFill.dataTables.css");
                public static readonly string autoFill_dataTables_min_css = Url("autoFill.dataTables.min.css");
                public static readonly string autoFill_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.foundation.min.css") ? Url("autoFill.foundation.min.css") : Url("autoFill.foundation.css");
                public static readonly string autoFill_foundation_min_css = Url("autoFill.foundation.min.css");
                public static readonly string autoFill_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autoFill.jqueryui.min.css") ? Url("autoFill.jqueryui.min.css") : Url("autoFill.jqueryui.css");
                public static readonly string autoFill_jqueryui_min_css = Url("autoFill.jqueryui.min.css");
                public static readonly string buttons_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.bootstrap.min.css") ? Url("buttons.bootstrap.min.css") : Url("buttons.bootstrap.css");
                public static readonly string buttons_bootstrap_min_css = Url("buttons.bootstrap.min.css");
                public static readonly string buttons_bootstrap4_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.bootstrap4.min.css") ? Url("buttons.bootstrap4.min.css") : Url("buttons.bootstrap4.css");
                public static readonly string buttons_bootstrap4_min_css = Url("buttons.bootstrap4.min.css");
                public static readonly string buttons_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.dataTables.min.css") ? Url("buttons.dataTables.min.css") : Url("buttons.dataTables.css");
                public static readonly string buttons_dataTables_min_css = Url("buttons.dataTables.min.css");
                public static readonly string buttons_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.foundation.min.css") ? Url("buttons.foundation.min.css") : Url("buttons.foundation.css");
                public static readonly string buttons_foundation_min_css = Url("buttons.foundation.min.css");
                public static readonly string buttons_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/buttons.jqueryui.min.css") ? Url("buttons.jqueryui.min.css") : Url("buttons.jqueryui.css");
                public static readonly string buttons_jqueryui_min_css = Url("buttons.jqueryui.min.css");
                public static readonly string colReorder_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colReorder.bootstrap.min.css") ? Url("colReorder.bootstrap.min.css") : Url("colReorder.bootstrap.css");
                public static readonly string colReorder_bootstrap_min_css = Url("colReorder.bootstrap.min.css");
                public static readonly string colReorder_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colReorder.dataTables.min.css") ? Url("colReorder.dataTables.min.css") : Url("colReorder.dataTables.css");
                public static readonly string colReorder_dataTables_min_css = Url("colReorder.dataTables.min.css");
                public static readonly string colReorder_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colReorder.foundation.min.css") ? Url("colReorder.foundation.min.css") : Url("colReorder.foundation.css");
                public static readonly string colReorder_foundation_min_css = Url("colReorder.foundation.min.css");
                public static readonly string colReorder_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colReorder.jqueryui.min.css") ? Url("colReorder.jqueryui.min.css") : Url("colReorder.jqueryui.css");
                public static readonly string colReorder_jqueryui_min_css = Url("colReorder.jqueryui.min.css");
                public static readonly string common_scss = Url("common.scss");
                public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
                public static readonly string dataTables_bootstrap_min_css = Url("dataTables.bootstrap.min.css");
                public static readonly string dataTables_bootstrap4_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap4.min.css") ? Url("dataTables.bootstrap4.min.css") : Url("dataTables.bootstrap4.css");
                public static readonly string dataTables_bootstrap4_min_css = Url("dataTables.bootstrap4.min.css");
                public static readonly string dataTables_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.foundation.min.css") ? Url("dataTables.foundation.min.css") : Url("dataTables.foundation.css");
                public static readonly string dataTables_foundation_min_css = Url("dataTables.foundation.min.css");
                public static readonly string dataTables_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.jqueryui.min.css") ? Url("dataTables.jqueryui.min.css") : Url("dataTables.jqueryui.css");
                public static readonly string dataTables_jqueryui_min_css = Url("dataTables.jqueryui.min.css");
                public static readonly string dataTables_material_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.material.min.css") ? Url("dataTables.material.min.css") : Url("dataTables.material.css");
                public static readonly string dataTables_material_min_css = Url("dataTables.material.min.css");
                public static readonly string dataTables_semanticui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.semanticui.min.css") ? Url("dataTables.semanticui.min.css") : Url("dataTables.semanticui.css");
                public static readonly string dataTables_semanticui_min_css = Url("dataTables.semanticui.min.css");
                public static readonly string dataTables_uikit_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.uikit.min.css") ? Url("dataTables.uikit.min.css") : Url("dataTables.uikit.css");
                public static readonly string dataTables_uikit_min_css = Url("dataTables.uikit.min.css");
                public static readonly string fixedColumns_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedColumns.bootstrap.min.css") ? Url("fixedColumns.bootstrap.min.css") : Url("fixedColumns.bootstrap.css");
                public static readonly string fixedColumns_bootstrap_min_css = Url("fixedColumns.bootstrap.min.css");
                public static readonly string fixedColumns_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedColumns.dataTables.min.css") ? Url("fixedColumns.dataTables.min.css") : Url("fixedColumns.dataTables.css");
                public static readonly string fixedColumns_dataTables_min_css = Url("fixedColumns.dataTables.min.css");
                public static readonly string fixedColumns_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedColumns.foundation.min.css") ? Url("fixedColumns.foundation.min.css") : Url("fixedColumns.foundation.css");
                public static readonly string fixedColumns_foundation_min_css = Url("fixedColumns.foundation.min.css");
                public static readonly string fixedColumns_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedColumns.jqueryui.min.css") ? Url("fixedColumns.jqueryui.min.css") : Url("fixedColumns.jqueryui.css");
                public static readonly string fixedColumns_jqueryui_min_css = Url("fixedColumns.jqueryui.min.css");
                public static readonly string fixedHeader_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedHeader.bootstrap.min.css") ? Url("fixedHeader.bootstrap.min.css") : Url("fixedHeader.bootstrap.css");
                public static readonly string fixedHeader_bootstrap_min_css = Url("fixedHeader.bootstrap.min.css");
                public static readonly string fixedHeader_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedHeader.dataTables.min.css") ? Url("fixedHeader.dataTables.min.css") : Url("fixedHeader.dataTables.css");
                public static readonly string fixedHeader_dataTables_min_css = Url("fixedHeader.dataTables.min.css");
                public static readonly string fixedHeader_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedHeader.foundation.min.css") ? Url("fixedHeader.foundation.min.css") : Url("fixedHeader.foundation.css");
                public static readonly string fixedHeader_foundation_min_css = Url("fixedHeader.foundation.min.css");
                public static readonly string fixedHeader_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fixedHeader.jqueryui.min.css") ? Url("fixedHeader.jqueryui.min.css") : Url("fixedHeader.jqueryui.css");
                public static readonly string fixedHeader_jqueryui_min_css = Url("fixedHeader.jqueryui.min.css");
                public static readonly string jquery_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.css") ? Url("jquery.dataTables.min.css") : Url("jquery.dataTables.css");
                public static readonly string jquery_dataTables_min_css = Url("jquery.dataTables.min.css");
                public static readonly string jquery_dataTables_themeroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables_themeroller.min.css") ? Url("jquery.dataTables_themeroller.min.css") : Url("jquery.dataTables_themeroller.css");
                public static readonly string keyTable_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/keyTable.bootstrap.min.css") ? Url("keyTable.bootstrap.min.css") : Url("keyTable.bootstrap.css");
                public static readonly string keyTable_bootstrap_min_css = Url("keyTable.bootstrap.min.css");
                public static readonly string keyTable_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/keyTable.dataTables.min.css") ? Url("keyTable.dataTables.min.css") : Url("keyTable.dataTables.css");
                public static readonly string keyTable_dataTables_min_css = Url("keyTable.dataTables.min.css");
                public static readonly string keyTable_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/keyTable.foundation.min.css") ? Url("keyTable.foundation.min.css") : Url("keyTable.foundation.css");
                public static readonly string keyTable_foundation_min_css = Url("keyTable.foundation.min.css");
                public static readonly string keyTable_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/keyTable.jqueryui.min.css") ? Url("keyTable.jqueryui.min.css") : Url("keyTable.jqueryui.css");
                public static readonly string keyTable_jqueryui_min_css = Url("keyTable.jqueryui.min.css");
                public static readonly string mixins_scss = Url("mixins.scss");
                public static readonly string responsive_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.bootstrap.min.css") ? Url("responsive.bootstrap.min.css") : Url("responsive.bootstrap.css");
                public static readonly string responsive_bootstrap_min_css = Url("responsive.bootstrap.min.css");
                public static readonly string responsive_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.dataTables.min.css") ? Url("responsive.dataTables.min.css") : Url("responsive.dataTables.css");
                public static readonly string responsive_dataTables_min_css = Url("responsive.dataTables.min.css");
                public static readonly string responsive_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.foundation.min.css") ? Url("responsive.foundation.min.css") : Url("responsive.foundation.css");
                public static readonly string responsive_foundation_min_css = Url("responsive.foundation.min.css");
                public static readonly string responsive_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/responsive.jqueryui.min.css") ? Url("responsive.jqueryui.min.css") : Url("responsive.jqueryui.css");
                public static readonly string responsive_jqueryui_min_css = Url("responsive.jqueryui.min.css");
                public static readonly string rowReorder_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rowReorder.bootstrap.min.css") ? Url("rowReorder.bootstrap.min.css") : Url("rowReorder.bootstrap.css");
                public static readonly string rowReorder_bootstrap_min_css = Url("rowReorder.bootstrap.min.css");
                public static readonly string rowReorder_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rowReorder.dataTables.min.css") ? Url("rowReorder.dataTables.min.css") : Url("rowReorder.dataTables.css");
                public static readonly string rowReorder_dataTables_min_css = Url("rowReorder.dataTables.min.css");
                public static readonly string rowReorder_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rowReorder.foundation.min.css") ? Url("rowReorder.foundation.min.css") : Url("rowReorder.foundation.css");
                public static readonly string rowReorder_foundation_min_css = Url("rowReorder.foundation.min.css");
                public static readonly string rowReorder_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rowReorder.jqueryui.min.css") ? Url("rowReorder.jqueryui.min.css") : Url("rowReorder.jqueryui.css");
                public static readonly string rowReorder_jqueryui_min_css = Url("rowReorder.jqueryui.min.css");
                public static readonly string scroller_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scroller.bootstrap.min.css") ? Url("scroller.bootstrap.min.css") : Url("scroller.bootstrap.css");
                public static readonly string scroller_bootstrap_min_css = Url("scroller.bootstrap.min.css");
                public static readonly string scroller_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scroller.dataTables.min.css") ? Url("scroller.dataTables.min.css") : Url("scroller.dataTables.css");
                public static readonly string scroller_dataTables_min_css = Url("scroller.dataTables.min.css");
                public static readonly string scroller_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scroller.foundation.min.css") ? Url("scroller.foundation.min.css") : Url("scroller.foundation.css");
                public static readonly string scroller_foundation_min_css = Url("scroller.foundation.min.css");
                public static readonly string scroller_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/scroller.jqueryui.min.css") ? Url("scroller.jqueryui.min.css") : Url("scroller.jqueryui.css");
                public static readonly string scroller_jqueryui_min_css = Url("scroller.jqueryui.min.css");
                public static readonly string select_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.bootstrap.min.css") ? Url("select.bootstrap.min.css") : Url("select.bootstrap.css");
                public static readonly string select_bootstrap_min_css = Url("select.bootstrap.min.css");
                public static readonly string select_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.dataTables.min.css") ? Url("select.dataTables.min.css") : Url("select.dataTables.css");
                public static readonly string select_dataTables_min_css = Url("select.dataTables.min.css");
                public static readonly string select_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.foundation.min.css") ? Url("select.foundation.min.css") : Url("select.foundation.css");
                public static readonly string select_foundation_min_css = Url("select.foundation.min.css");
                public static readonly string select_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.jqueryui.min.css") ? Url("select.jqueryui.min.css") : Url("select.jqueryui.css");
                public static readonly string select_jqueryui_min_css = Url("select.jqueryui.min.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                private const string URLPATH = "~/Content/DataTables/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string details_close_png = Url("details_close.png");
                public static readonly string details_open_png = Url("details_open.png");
                public static readonly string sort_asc_png = Url("sort_asc.png");
                public static readonly string sort_asc_disabled_png = Url("sort_asc_disabled.png");
                public static readonly string sort_both_png = Url("sort_both.png");
                public static readonly string sort_desc_png = Url("sort_desc.png");
                public static readonly string sort_desc_disabled_png = Url("sort_desc_disabled.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class swf {
                private const string URLPATH = "~/Content/DataTables/swf";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string flashExport_swf = Url("flashExport.swf");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_10_1 {
            private const string URLPATH = "~/Content/DataTables-1.10.1";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/DataTables-1.10.1/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dataTables_tableTools_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.tableTools.min.css") ? Url("dataTables.tableTools.min.css") : Url("dataTables.tableTools.css");
                public static readonly string dataTables_tableTools_min_css = Url("dataTables.tableTools.min.css");
            }
        
        }
    
        public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
        public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
        public static readonly string hyperslackers_bootstrap3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hyperslackers-bootstrap3.min.css") ? Url("hyperslackers-bootstrap3.min.css") : Url("hyperslackers-bootstrap3.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Prettify {
            private const string URLPATH = "~/Content/Prettify";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string prettify_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/prettify.min.css") ? Url("prettify.min.css") : Url("prettify.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Themes {
                private const string URLPATH = "~/Content/Prettify/Themes";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string desert_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/desert.min.css") ? Url("desert.min.css") : Url("desert.css");
                public static readonly string doxy_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doxy.min.css") ? Url("doxy.min.css") : Url("doxy.css");
                public static readonly string sons_of_obsidian_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sons-of-obsidian.min.css") ? Url("sons-of-obsidian.min.css") : Url("sons-of-obsidian.css");
                public static readonly string sunburst_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sunburst.min.css") ? Url("sunburst.min.css") : Url("sunburst.css");
            }
        
        }
    
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Images {
        private const string URLPATH = "~/Images";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string CarouselSlide1_png = Url("CarouselSlide1.png");
        public static readonly string CarouselSlide2_png = Url("CarouselSlide2.png");
        public static readonly string CarouselSlide3_png = Url("CarouselSlide3.png");
        public static readonly string CarouselSlide4_png = Url("CarouselSlide4.png");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class ckeditor 
            {
                public static partial class adapters 
                {
                    public static class Assets
                    {
                        public const string jquery_js = "~/Scripts/ckeditor/adapters/jquery.js"; 
                    }
                }
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class lang 
                {
                    public static class Assets
                    {
                        public const string _languages_js = "~/Scripts/ckeditor/lang/_languages.js"; 
                        public const string af_js = "~/Scripts/ckeditor/lang/af.js"; 
                        public const string ar_js = "~/Scripts/ckeditor/lang/ar.js"; 
                        public const string bg_js = "~/Scripts/ckeditor/lang/bg.js"; 
                        public const string bn_js = "~/Scripts/ckeditor/lang/bn.js"; 
                        public const string bs_js = "~/Scripts/ckeditor/lang/bs.js"; 
                        public const string ca_js = "~/Scripts/ckeditor/lang/ca.js"; 
                        public const string cs_js = "~/Scripts/ckeditor/lang/cs.js"; 
                        public const string cy_js = "~/Scripts/ckeditor/lang/cy.js"; 
                        public const string da_js = "~/Scripts/ckeditor/lang/da.js"; 
                        public const string de_js = "~/Scripts/ckeditor/lang/de.js"; 
                        public const string el_js = "~/Scripts/ckeditor/lang/el.js"; 
                        public const string en_au_js = "~/Scripts/ckeditor/lang/en-au.js"; 
                        public const string en_ca_js = "~/Scripts/ckeditor/lang/en-ca.js"; 
                        public const string en_gb_js = "~/Scripts/ckeditor/lang/en-gb.js"; 
                        public const string en_js = "~/Scripts/ckeditor/lang/en.js"; 
                        public const string eo_js = "~/Scripts/ckeditor/lang/eo.js"; 
                        public const string es_js = "~/Scripts/ckeditor/lang/es.js"; 
                        public const string et_js = "~/Scripts/ckeditor/lang/et.js"; 
                        public const string eu_js = "~/Scripts/ckeditor/lang/eu.js"; 
                        public const string fa_js = "~/Scripts/ckeditor/lang/fa.js"; 
                        public const string fi_js = "~/Scripts/ckeditor/lang/fi.js"; 
                        public const string fo_js = "~/Scripts/ckeditor/lang/fo.js"; 
                        public const string fr_ca_js = "~/Scripts/ckeditor/lang/fr-ca.js"; 
                        public const string fr_js = "~/Scripts/ckeditor/lang/fr.js"; 
                        public const string gl_js = "~/Scripts/ckeditor/lang/gl.js"; 
                        public const string gu_js = "~/Scripts/ckeditor/lang/gu.js"; 
                        public const string he_js = "~/Scripts/ckeditor/lang/he.js"; 
                        public const string hi_js = "~/Scripts/ckeditor/lang/hi.js"; 
                        public const string hr_js = "~/Scripts/ckeditor/lang/hr.js"; 
                        public const string hu_js = "~/Scripts/ckeditor/lang/hu.js"; 
                        public const string id_js = "~/Scripts/ckeditor/lang/id.js"; 
                        public const string is_js = "~/Scripts/ckeditor/lang/is.js"; 
                        public const string it_js = "~/Scripts/ckeditor/lang/it.js"; 
                        public const string ja_js = "~/Scripts/ckeditor/lang/ja.js"; 
                        public const string ka_js = "~/Scripts/ckeditor/lang/ka.js"; 
                        public const string km_js = "~/Scripts/ckeditor/lang/km.js"; 
                        public const string ko_js = "~/Scripts/ckeditor/lang/ko.js"; 
                        public const string lt_js = "~/Scripts/ckeditor/lang/lt.js"; 
                        public const string lv_js = "~/Scripts/ckeditor/lang/lv.js"; 
                        public const string mk_js = "~/Scripts/ckeditor/lang/mk.js"; 
                        public const string mn_js = "~/Scripts/ckeditor/lang/mn.js"; 
                        public const string ms_js = "~/Scripts/ckeditor/lang/ms.js"; 
                        public const string nb_js = "~/Scripts/ckeditor/lang/nb.js"; 
                        public const string nl_js = "~/Scripts/ckeditor/lang/nl.js"; 
                        public const string no_js = "~/Scripts/ckeditor/lang/no.js"; 
                        public const string pl_js = "~/Scripts/ckeditor/lang/pl.js"; 
                        public const string pt_br_js = "~/Scripts/ckeditor/lang/pt-br.js"; 
                        public const string pt_js = "~/Scripts/ckeditor/lang/pt.js"; 
                        public const string ro_js = "~/Scripts/ckeditor/lang/ro.js"; 
                        public const string ru_js = "~/Scripts/ckeditor/lang/ru.js"; 
                        public const string sk_js = "~/Scripts/ckeditor/lang/sk.js"; 
                        public const string sl_js = "~/Scripts/ckeditor/lang/sl.js"; 
                        public const string sr_latn_js = "~/Scripts/ckeditor/lang/sr-latn.js"; 
                        public const string sr_js = "~/Scripts/ckeditor/lang/sr.js"; 
                        public const string sv_js = "~/Scripts/ckeditor/lang/sv.js"; 
                        public const string th_js = "~/Scripts/ckeditor/lang/th.js"; 
                        public const string tr_js = "~/Scripts/ckeditor/lang/tr.js"; 
                        public const string ug_js = "~/Scripts/ckeditor/lang/ug.js"; 
                        public const string uk_js = "~/Scripts/ckeditor/lang/uk.js"; 
                        public const string vi_js = "~/Scripts/ckeditor/lang/vi.js"; 
                        public const string zh_cn_js = "~/Scripts/ckeditor/lang/zh-cn.js"; 
                        public const string zh_js = "~/Scripts/ckeditor/lang/zh.js"; 
                    }
                }
                public static partial class plugins 
                {
                    public static partial class a11yhelp 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string a11yhelp_js = "~/Scripts/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string cs_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/eo.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/fr.js"; 
                                public const string gu_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/gu.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/he.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/it.js"; 
                                public const string mk_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/mk.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/no.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/pt-br.js"; 
                                public const string ro_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ro.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/ug.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/a11yhelp/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class about 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string about_js = "~/Scripts/ckeditor/plugins/about/dialogs/about.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class adobeair 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/adobeair/plugin.js"; 
                        }
                    }
                    public static partial class ajax 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/ajax/plugin.js"; 
                        }
                    }
                    public static partial class autogrow 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/autogrow/plugin.js"; 
                        }
                    }
                    public static partial class bbcode 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/bbcode/plugin.js"; 
                        }
                    }
                    public static partial class clipboard 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string paste_js = "~/Scripts/ckeditor/plugins/clipboard/dialogs/paste.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class colordialog 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string colordialog_js = "~/Scripts/ckeditor/plugins/colordialog/dialogs/colordialog.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class devtools 
                    {
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/devtools/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/devtools/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/devtools/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/devtools/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/devtools/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/devtools/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/devtools/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/devtools/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/devtools/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/devtools/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/devtools/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/devtools/lang/fr.js"; 
                                public const string gu_js = "~/Scripts/ckeditor/plugins/devtools/lang/gu.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/devtools/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/devtools/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/devtools/lang/it.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/devtools/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/devtools/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/devtools/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/devtools/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/devtools/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/devtools/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/devtools/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/devtools/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/devtools/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/devtools/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/devtools/plugin.js"; 
                        }
                    }
                    public static partial class dialog 
                    {
                        public static class Assets
                        {
                            public const string dialogDefinition_js = "~/Scripts/ckeditor/plugins/dialog/dialogDefinition.js"; 
                        }
                    }
                    public static partial class div 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string div_js = "~/Scripts/ckeditor/plugins/div/dialogs/div.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class docprops 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string docprops_js = "~/Scripts/ckeditor/plugins/docprops/dialogs/docprops.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/docprops/plugin.js"; 
                        }
                    }
                    public static partial class find 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string find_js = "~/Scripts/ckeditor/plugins/find/dialogs/find.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class flash 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string flash_js = "~/Scripts/ckeditor/plugins/flash/dialogs/flash.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class forms 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string button_js = "~/Scripts/ckeditor/plugins/forms/dialogs/button.js"; 
                                public const string checkbox_js = "~/Scripts/ckeditor/plugins/forms/dialogs/checkbox.js"; 
                                public const string form_js = "~/Scripts/ckeditor/plugins/forms/dialogs/form.js"; 
                                public const string hiddenfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/hiddenfield.js"; 
                                public const string radio_js = "~/Scripts/ckeditor/plugins/forms/dialogs/radio.js"; 
                                public const string select_js = "~/Scripts/ckeditor/plugins/forms/dialogs/select.js"; 
                                public const string textarea_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textarea.js"; 
                                public const string textfield_js = "~/Scripts/ckeditor/plugins/forms/dialogs/textfield.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframe 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string iframe_js = "~/Scripts/ckeditor/plugins/iframe/dialogs/iframe.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class iframedialog 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/iframedialog/plugin.js"; 
                        }
                    }
                    public static partial class image 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string image_js = "~/Scripts/ckeditor/plugins/image/dialogs/image.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class link 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string anchor_js = "~/Scripts/ckeditor/plugins/link/dialogs/anchor.js"; 
                                public const string link_js = "~/Scripts/ckeditor/plugins/link/dialogs/link.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class liststyle 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string liststyle_js = "~/Scripts/ckeditor/plugins/liststyle/dialogs/liststyle.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pagebreak 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastefromword 
                    {
                        public static partial class filter 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/pastefromword/filter/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class pastetext 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string pastetext_js = "~/Scripts/ckeditor/plugins/pastetext/dialogs/pastetext.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class placeholder 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string placeholder_js = "~/Scripts/ckeditor/plugins/placeholder/dialogs/placeholder.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/placeholder/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/placeholder/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/placeholder/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/placeholder/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/placeholder/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/placeholder/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/placeholder/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/placeholder/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/placeholder/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/placeholder/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/placeholder/lang/it.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/placeholder/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/placeholder/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/placeholder/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/placeholder/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/placeholder/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/placeholder/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/placeholder/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/placeholder/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/placeholder/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/placeholder/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/placeholder/plugin.js"; 
                        }
                    }
                    public static partial class preview 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class scayt 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string options_js = "~/Scripts/ckeditor/plugins/scayt/dialogs/options.js"; 
                                public const string toolbar_css = "~/Scripts/ckeditor/plugins/scayt/dialogs/toolbar.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class showblocks 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class smiley 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string smiley_js = "~/Scripts/ckeditor/plugins/smiley/dialogs/smiley.js"; 
                            }
                        }
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class specialchar 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string specialchar_js = "~/Scripts/ckeditor/plugins/specialchar/dialogs/specialchar.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string cs_js = "~/Scripts/ckeditor/plugins/specialchar/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/specialchar/lang/cy.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/specialchar/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/specialchar/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/specialchar/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/specialchar/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/specialchar/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/specialchar/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/specialchar/lang/it.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/specialchar/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/specialchar/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/specialchar/lang/no.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/specialchar/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/specialchar/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/specialchar/lang/ug.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/specialchar/lang/zh-cn.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class styles 
                    {
                        public static partial class styles_ 
                        {
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/styles/styles/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class stylesheetparser 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/stylesheetparser/plugin.js"; 
                        }
                    }
                    public static partial class table 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string table_js = "~/Scripts/ckeditor/plugins/table/dialogs/table.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class tableresize 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/tableresize/plugin.js"; 
                        }
                    }
                    public static partial class tabletools 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string tableCell_js = "~/Scripts/ckeditor/plugins/tabletools/dialogs/tableCell.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class templates 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string templates_js = "~/Scripts/ckeditor/plugins/templates/dialogs/templates.js"; 
                            }
                        }
                        public static partial class templates_ 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string default_js = "~/Scripts/ckeditor/plugins/templates/templates/default.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class uicolor 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string uicolor_js = "~/Scripts/ckeditor/plugins/uicolor/dialogs/uicolor.js"; 
                            }
                        }
                        public static partial class lang 
                        {
                            public static class Assets
                            {
                                public const string bg_js = "~/Scripts/ckeditor/plugins/uicolor/lang/bg.js"; 
                                public const string cs_js = "~/Scripts/ckeditor/plugins/uicolor/lang/cs.js"; 
                                public const string cy_js = "~/Scripts/ckeditor/plugins/uicolor/lang/cy.js"; 
                                public const string da_js = "~/Scripts/ckeditor/plugins/uicolor/lang/da.js"; 
                                public const string de_js = "~/Scripts/ckeditor/plugins/uicolor/lang/de.js"; 
                                public const string el_js = "~/Scripts/ckeditor/plugins/uicolor/lang/el.js"; 
                                public const string en_js = "~/Scripts/ckeditor/plugins/uicolor/lang/en.js"; 
                                public const string eo_js = "~/Scripts/ckeditor/plugins/uicolor/lang/eo.js"; 
                                public const string et_js = "~/Scripts/ckeditor/plugins/uicolor/lang/et.js"; 
                                public const string fa_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fa.js"; 
                                public const string fi_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fi.js"; 
                                public const string fr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/fr.js"; 
                                public const string he_js = "~/Scripts/ckeditor/plugins/uicolor/lang/he.js"; 
                                public const string hr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/hr.js"; 
                                public const string it_js = "~/Scripts/ckeditor/plugins/uicolor/lang/it.js"; 
                                public const string mk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/mk.js"; 
                                public const string nb_js = "~/Scripts/ckeditor/plugins/uicolor/lang/nb.js"; 
                                public const string nl_js = "~/Scripts/ckeditor/plugins/uicolor/lang/nl.js"; 
                                public const string no_js = "~/Scripts/ckeditor/plugins/uicolor/lang/no.js"; 
                                public const string pl_js = "~/Scripts/ckeditor/plugins/uicolor/lang/pl.js"; 
                                public const string pt_br_js = "~/Scripts/ckeditor/plugins/uicolor/lang/pt-br.js"; 
                                public const string tr_js = "~/Scripts/ckeditor/plugins/uicolor/lang/tr.js"; 
                                public const string ug_js = "~/Scripts/ckeditor/plugins/uicolor/lang/ug.js"; 
                                public const string uk_js = "~/Scripts/ckeditor/plugins/uicolor/lang/uk.js"; 
                                public const string vi_js = "~/Scripts/ckeditor/plugins/uicolor/lang/vi.js"; 
                                public const string zh_cn_js = "~/Scripts/ckeditor/plugins/uicolor/lang/zh-cn.js"; 
                            }
                        }
                        public static partial class yui 
                        {
                            public static partial class assets_ 
                            {
                                public static class Assets
                                {
                                    public const string yui_css = "~/Scripts/ckeditor/plugins/uicolor/yui/assets/yui.css";
                                }
                            }
                            public static class Assets
                            {
                                public const string yui_js = "~/Scripts/ckeditor/plugins/uicolor/yui/yui.js"; 
                            }
                        }
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/uicolor/plugin.js"; 
                        }
                    }
                    public static partial class wsc 
                    {
                        public static partial class dialogs 
                        {
                            public static class Assets
                            {
                                public const string wsc_css = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.css";
                                public const string wsc_js = "~/Scripts/ckeditor/plugins/wsc/dialogs/wsc.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class xml 
                    {
                        public static class Assets
                        {
                            public const string plugin_js = "~/Scripts/ckeditor/plugins/xml/plugin.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class skins 
                {
                    public static partial class kama 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/kama/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/kama/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/kama/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/kama/templates.css";
                        }
                    }
                    public static partial class office2003 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/office2003/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/office2003/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/office2003/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/office2003/templates.css";
                        }
                    }
                    public static partial class v2 
                    {
                        public static partial class images 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                            public const string dialog_css = "~/Scripts/ckeditor/skins/v2/dialog.css";
                            public const string editor_css = "~/Scripts/ckeditor/skins/v2/editor.css";
                            public const string skin_js = "~/Scripts/ckeditor/skins/v2/skin.js"; 
                            public const string templates_css = "~/Scripts/ckeditor/skins/v2/templates.css";
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class themes 
                {
                    public static partial class @default 
                    {
                        public static class Assets
                        {
                            public const string theme_js = "~/Scripts/ckeditor/themes/default/theme.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string ckeditor_js = "~/Scripts/ckeditor/ckeditor.js"; 
                    public const string ckeditor_basic_js = "~/Scripts/ckeditor/ckeditor_basic.js"; 
                    public const string ckeditor_basic_source_js = "~/Scripts/ckeditor/ckeditor_basic_source.js"; 
                    public const string ckeditor_source_js = "~/Scripts/ckeditor/ckeditor_source.js"; 
                    public const string config_js = "~/Scripts/ckeditor/config.js"; 
                    public const string contents_css = "~/Scripts/ckeditor/contents.css";
                }
            }
            public static partial class DataTables 
            {
                public static class Assets
                {
                    public const string autoFill_bootstrap_js = "~/Scripts/DataTables/autoFill.bootstrap.js"; 
                    public const string autoFill_bootstrap_min_js = "~/Scripts/DataTables/autoFill.bootstrap.min.js"; 
                    public const string autoFill_foundation_js = "~/Scripts/DataTables/autoFill.foundation.js"; 
                    public const string autoFill_foundation_min_js = "~/Scripts/DataTables/autoFill.foundation.min.js"; 
                    public const string autoFill_jqueryui_js = "~/Scripts/DataTables/autoFill.jqueryui.js"; 
                    public const string autoFill_jqueryui_min_js = "~/Scripts/DataTables/autoFill.jqueryui.min.js"; 
                    public const string buttons_bootstrap_js = "~/Scripts/DataTables/buttons.bootstrap.js"; 
                    public const string buttons_bootstrap_min_js = "~/Scripts/DataTables/buttons.bootstrap.min.js"; 
                    public const string buttons_bootstrap4_js = "~/Scripts/DataTables/buttons.bootstrap4.js"; 
                    public const string buttons_bootstrap4_min_js = "~/Scripts/DataTables/buttons.bootstrap4.min.js"; 
                    public const string buttons_colVis_js = "~/Scripts/DataTables/buttons.colVis.js"; 
                    public const string buttons_colVis_min_js = "~/Scripts/DataTables/buttons.colVis.min.js"; 
                    public const string buttons_flash_js = "~/Scripts/DataTables/buttons.flash.js"; 
                    public const string buttons_flash_min_js = "~/Scripts/DataTables/buttons.flash.min.js"; 
                    public const string buttons_foundation_js = "~/Scripts/DataTables/buttons.foundation.js"; 
                    public const string buttons_foundation_min_js = "~/Scripts/DataTables/buttons.foundation.min.js"; 
                    public const string buttons_html5_js = "~/Scripts/DataTables/buttons.html5.js"; 
                    public const string buttons_html5_min_js = "~/Scripts/DataTables/buttons.html5.min.js"; 
                    public const string buttons_jqueryui_js = "~/Scripts/DataTables/buttons.jqueryui.js"; 
                    public const string buttons_jqueryui_min_js = "~/Scripts/DataTables/buttons.jqueryui.min.js"; 
                    public const string buttons_print_js = "~/Scripts/DataTables/buttons.print.js"; 
                    public const string buttons_print_min_js = "~/Scripts/DataTables/buttons.print.min.js"; 
                    public const string dataTables_autoFill_js = "~/Scripts/DataTables/dataTables.autoFill.js"; 
                    public const string dataTables_autoFill_min_js = "~/Scripts/DataTables/dataTables.autoFill.min.js"; 
                    public const string dataTables_bootstrap_js = "~/Scripts/DataTables/dataTables.bootstrap.js"; 
                    public const string dataTables_bootstrap_min_js = "~/Scripts/DataTables/dataTables.bootstrap.min.js"; 
                    public const string dataTables_bootstrap4_js = "~/Scripts/DataTables/dataTables.bootstrap4.js"; 
                    public const string dataTables_bootstrap4_min_js = "~/Scripts/DataTables/dataTables.bootstrap4.min.js"; 
                    public const string dataTables_buttons_js = "~/Scripts/DataTables/dataTables.buttons.js"; 
                    public const string dataTables_buttons_min_js = "~/Scripts/DataTables/dataTables.buttons.min.js"; 
                    public const string dataTables_colReorder_js = "~/Scripts/DataTables/dataTables.colReorder.js"; 
                    public const string dataTables_colReorder_min_js = "~/Scripts/DataTables/dataTables.colReorder.min.js"; 
                    public const string dataTables_fixedColumns_js = "~/Scripts/DataTables/dataTables.fixedColumns.js"; 
                    public const string dataTables_fixedColumns_min_js = "~/Scripts/DataTables/dataTables.fixedColumns.min.js"; 
                    public const string dataTables_fixedHeader_js = "~/Scripts/DataTables/dataTables.fixedHeader.js"; 
                    public const string dataTables_fixedHeader_min_js = "~/Scripts/DataTables/dataTables.fixedHeader.min.js"; 
                    public const string dataTables_foundation_js = "~/Scripts/DataTables/dataTables.foundation.js"; 
                    public const string dataTables_foundation_min_js = "~/Scripts/DataTables/dataTables.foundation.min.js"; 
                    public const string dataTables_jqueryui_js = "~/Scripts/DataTables/dataTables.jqueryui.js"; 
                    public const string dataTables_jqueryui_min_js = "~/Scripts/DataTables/dataTables.jqueryui.min.js"; 
                    public const string dataTables_keyTable_js = "~/Scripts/DataTables/dataTables.keyTable.js"; 
                    public const string dataTables_keyTable_min_js = "~/Scripts/DataTables/dataTables.keyTable.min.js"; 
                    public const string dataTables_material_js = "~/Scripts/DataTables/dataTables.material.js"; 
                    public const string dataTables_material_min_js = "~/Scripts/DataTables/dataTables.material.min.js"; 
                    public const string dataTables_responsive_js = "~/Scripts/DataTables/dataTables.responsive.js"; 
                    public const string dataTables_responsive_min_js = "~/Scripts/DataTables/dataTables.responsive.min.js"; 
                    public const string dataTables_rowReorder_js = "~/Scripts/DataTables/dataTables.rowReorder.js"; 
                    public const string dataTables_rowReorder_min_js = "~/Scripts/DataTables/dataTables.rowReorder.min.js"; 
                    public const string dataTables_scroller_js = "~/Scripts/DataTables/dataTables.scroller.js"; 
                    public const string dataTables_scroller_min_js = "~/Scripts/DataTables/dataTables.scroller.min.js"; 
                    public const string dataTables_select_js = "~/Scripts/DataTables/dataTables.select.js"; 
                    public const string dataTables_select_min_js = "~/Scripts/DataTables/dataTables.select.min.js"; 
                    public const string dataTables_semanticui_js = "~/Scripts/DataTables/dataTables.semanticui.js"; 
                    public const string dataTables_semanticui_min_js = "~/Scripts/DataTables/dataTables.semanticui.min.js"; 
                    public const string dataTables_uikit_js = "~/Scripts/DataTables/dataTables.uikit.js"; 
                    public const string dataTables_uikit_min_js = "~/Scripts/DataTables/dataTables.uikit.min.js"; 
                    public const string jquery_dataTables_js = "~/Scripts/DataTables/jquery.dataTables.js"; 
                    public const string jquery_dataTables_min_js = "~/Scripts/DataTables/jquery.dataTables.min.js"; 
                    public const string responsive_bootstrap_js = "~/Scripts/DataTables/responsive.bootstrap.js"; 
                    public const string responsive_bootstrap_min_js = "~/Scripts/DataTables/responsive.bootstrap.min.js"; 
                    public const string responsive_foundation_js = "~/Scripts/DataTables/responsive.foundation.js"; 
                    public const string responsive_foundation_min_js = "~/Scripts/DataTables/responsive.foundation.min.js"; 
                    public const string responsive_jqueryui_js = "~/Scripts/DataTables/responsive.jqueryui.js"; 
                    public const string responsive_jqueryui_min_js = "~/Scripts/DataTables/responsive.jqueryui.min.js"; 
                }
            }
            public static partial class DataTables_1_10_1 
            {
                public static class Assets
                {
                    public const string dataTables_autoFill_js = "~/Scripts/DataTables-1.10.1/dataTables.autoFill.js"; 
                    public const string dataTables_autoFill_min_js = "~/Scripts/DataTables-1.10.1/dataTables.autoFill.min.js"; 
                    public const string dataTables_colReorder_js = "~/Scripts/DataTables-1.10.1/dataTables.colReorder.js"; 
                    public const string dataTables_colReorder_min_js = "~/Scripts/DataTables-1.10.1/dataTables.colReorder.min.js"; 
                    public const string dataTables_colVis_js = "~/Scripts/DataTables-1.10.1/dataTables.colVis.js"; 
                    public const string dataTables_colVis_min_js = "~/Scripts/DataTables-1.10.1/dataTables.colVis.min.js"; 
                    public const string dataTables_fixedColumns_js = "~/Scripts/DataTables-1.10.1/dataTables.fixedColumns.js"; 
                    public const string dataTables_fixedColumns_min_js = "~/Scripts/DataTables-1.10.1/dataTables.fixedColumns.min.js"; 
                    public const string dataTables_fixedHeader_js = "~/Scripts/DataTables-1.10.1/dataTables.fixedHeader.js"; 
                    public const string dataTables_fixedHeader_min_js = "~/Scripts/DataTables-1.10.1/dataTables.fixedHeader.min.js"; 
                    public const string dataTables_keyTable_js = "~/Scripts/DataTables-1.10.1/dataTables.keyTable.js"; 
                    public const string dataTables_keyTable_min_js = "~/Scripts/DataTables-1.10.1/dataTables.keyTable.min.js"; 
                    public const string dataTables_responsive_js = "~/Scripts/DataTables-1.10.1/dataTables.responsive.js"; 
                    public const string dataTables_responsive_min_js = "~/Scripts/DataTables-1.10.1/dataTables.responsive.min.js"; 
                    public const string dataTables_scroller_js = "~/Scripts/DataTables-1.10.1/dataTables.scroller.js"; 
                    public const string dataTables_scroller_min_js = "~/Scripts/DataTables-1.10.1/dataTables.scroller.min.js"; 
                    public const string dataTables_tableTools_js = "~/Scripts/DataTables-1.10.1/dataTables.tableTools.js"; 
                    public const string dataTables_tableTools_min_js = "~/Scripts/DataTables-1.10.1/dataTables.tableTools.min.js"; 
                    public const string jquery_dataTables_js = "~/Scripts/DataTables-1.10.1/jquery.dataTables.js"; 
                    public const string jquery_dataTables_min_js = "~/Scripts/DataTables-1.10.1/jquery.dataTables.min.js"; 
                }
            }
            public static partial class locales 
            {
                public static class Assets
                {
                    public const string bootstrap_datepicker_ar_min_js = "~/Scripts/locales/bootstrap-datepicker.ar.min.js"; 
                    public const string bootstrap_datepicker_az_min_js = "~/Scripts/locales/bootstrap-datepicker.az.min.js"; 
                    public const string bootstrap_datepicker_bg_min_js = "~/Scripts/locales/bootstrap-datepicker.bg.min.js"; 
                    public const string bootstrap_datepicker_bs_min_js = "~/Scripts/locales/bootstrap-datepicker.bs.min.js"; 
                    public const string bootstrap_datepicker_ca_min_js = "~/Scripts/locales/bootstrap-datepicker.ca.min.js"; 
                    public const string bootstrap_datepicker_cs_min_js = "~/Scripts/locales/bootstrap-datepicker.cs.min.js"; 
                    public const string bootstrap_datepicker_cy_min_js = "~/Scripts/locales/bootstrap-datepicker.cy.min.js"; 
                    public const string bootstrap_datepicker_da_min_js = "~/Scripts/locales/bootstrap-datepicker.da.min.js"; 
                    public const string bootstrap_datepicker_de_min_js = "~/Scripts/locales/bootstrap-datepicker.de.min.js"; 
                    public const string bootstrap_datepicker_el_min_js = "~/Scripts/locales/bootstrap-datepicker.el.min.js"; 
                    public const string bootstrap_datepicker_en_AU_min_js = "~/Scripts/locales/bootstrap-datepicker.en-AU.min.js"; 
                    public const string bootstrap_datepicker_en_GB_min_js = "~/Scripts/locales/bootstrap-datepicker.en-GB.min.js"; 
                    public const string bootstrap_datepicker_eo_min_js = "~/Scripts/locales/bootstrap-datepicker.eo.min.js"; 
                    public const string bootstrap_datepicker_es_min_js = "~/Scripts/locales/bootstrap-datepicker.es.min.js"; 
                    public const string bootstrap_datepicker_et_min_js = "~/Scripts/locales/bootstrap-datepicker.et.min.js"; 
                    public const string bootstrap_datepicker_eu_min_js = "~/Scripts/locales/bootstrap-datepicker.eu.min.js"; 
                    public const string bootstrap_datepicker_fa_min_js = "~/Scripts/locales/bootstrap-datepicker.fa.min.js"; 
                    public const string bootstrap_datepicker_fi_min_js = "~/Scripts/locales/bootstrap-datepicker.fi.min.js"; 
                    public const string bootstrap_datepicker_fo_min_js = "~/Scripts/locales/bootstrap-datepicker.fo.min.js"; 
                    public const string bootstrap_datepicker_fr_CH_min_js = "~/Scripts/locales/bootstrap-datepicker.fr-CH.min.js"; 
                    public const string bootstrap_datepicker_fr_min_js = "~/Scripts/locales/bootstrap-datepicker.fr.min.js"; 
                    public const string bootstrap_datepicker_gl_min_js = "~/Scripts/locales/bootstrap-datepicker.gl.min.js"; 
                    public const string bootstrap_datepicker_he_min_js = "~/Scripts/locales/bootstrap-datepicker.he.min.js"; 
                    public const string bootstrap_datepicker_hr_min_js = "~/Scripts/locales/bootstrap-datepicker.hr.min.js"; 
                    public const string bootstrap_datepicker_hu_min_js = "~/Scripts/locales/bootstrap-datepicker.hu.min.js"; 
                    public const string bootstrap_datepicker_hy_min_js = "~/Scripts/locales/bootstrap-datepicker.hy.min.js"; 
                    public const string bootstrap_datepicker_id_min_js = "~/Scripts/locales/bootstrap-datepicker.id.min.js"; 
                    public const string bootstrap_datepicker_is_min_js = "~/Scripts/locales/bootstrap-datepicker.is.min.js"; 
                    public const string bootstrap_datepicker_it_CH_min_js = "~/Scripts/locales/bootstrap-datepicker.it-CH.min.js"; 
                    public const string bootstrap_datepicker_it_min_js = "~/Scripts/locales/bootstrap-datepicker.it.min.js"; 
                    public const string bootstrap_datepicker_ja_min_js = "~/Scripts/locales/bootstrap-datepicker.ja.min.js"; 
                    public const string bootstrap_datepicker_ka_min_js = "~/Scripts/locales/bootstrap-datepicker.ka.min.js"; 
                    public const string bootstrap_datepicker_kh_min_js = "~/Scripts/locales/bootstrap-datepicker.kh.min.js"; 
                    public const string bootstrap_datepicker_kk_min_js = "~/Scripts/locales/bootstrap-datepicker.kk.min.js"; 
                    public const string bootstrap_datepicker_ko_min_js = "~/Scripts/locales/bootstrap-datepicker.ko.min.js"; 
                    public const string bootstrap_datepicker_kr_min_js = "~/Scripts/locales/bootstrap-datepicker.kr.min.js"; 
                    public const string bootstrap_datepicker_lt_min_js = "~/Scripts/locales/bootstrap-datepicker.lt.min.js"; 
                    public const string bootstrap_datepicker_lv_min_js = "~/Scripts/locales/bootstrap-datepicker.lv.min.js"; 
                    public const string bootstrap_datepicker_me_min_js = "~/Scripts/locales/bootstrap-datepicker.me.min.js"; 
                    public const string bootstrap_datepicker_mk_min_js = "~/Scripts/locales/bootstrap-datepicker.mk.min.js"; 
                    public const string bootstrap_datepicker_mn_min_js = "~/Scripts/locales/bootstrap-datepicker.mn.min.js"; 
                    public const string bootstrap_datepicker_ms_min_js = "~/Scripts/locales/bootstrap-datepicker.ms.min.js"; 
                    public const string bootstrap_datepicker_nb_min_js = "~/Scripts/locales/bootstrap-datepicker.nb.min.js"; 
                    public const string bootstrap_datepicker_nl_BE_min_js = "~/Scripts/locales/bootstrap-datepicker.nl-BE.min.js"; 
                    public const string bootstrap_datepicker_nl_min_js = "~/Scripts/locales/bootstrap-datepicker.nl.min.js"; 
                    public const string bootstrap_datepicker_no_min_js = "~/Scripts/locales/bootstrap-datepicker.no.min.js"; 
                    public const string bootstrap_datepicker_pl_min_js = "~/Scripts/locales/bootstrap-datepicker.pl.min.js"; 
                    public const string bootstrap_datepicker_pt_BR_min_js = "~/Scripts/locales/bootstrap-datepicker.pt-BR.min.js"; 
                    public const string bootstrap_datepicker_pt_min_js = "~/Scripts/locales/bootstrap-datepicker.pt.min.js"; 
                    public const string bootstrap_datepicker_ro_min_js = "~/Scripts/locales/bootstrap-datepicker.ro.min.js"; 
                    public const string bootstrap_datepicker_rs_latin_min_js = "~/Scripts/locales/bootstrap-datepicker.rs-latin.min.js"; 
                    public const string bootstrap_datepicker_rs_min_js = "~/Scripts/locales/bootstrap-datepicker.rs.min.js"; 
                    public const string bootstrap_datepicker_ru_min_js = "~/Scripts/locales/bootstrap-datepicker.ru.min.js"; 
                    public const string bootstrap_datepicker_sk_min_js = "~/Scripts/locales/bootstrap-datepicker.sk.min.js"; 
                    public const string bootstrap_datepicker_sl_min_js = "~/Scripts/locales/bootstrap-datepicker.sl.min.js"; 
                    public const string bootstrap_datepicker_sq_min_js = "~/Scripts/locales/bootstrap-datepicker.sq.min.js"; 
                    public const string bootstrap_datepicker_sr_latin_min_js = "~/Scripts/locales/bootstrap-datepicker.sr-latin.min.js"; 
                    public const string bootstrap_datepicker_sr_min_js = "~/Scripts/locales/bootstrap-datepicker.sr.min.js"; 
                    public const string bootstrap_datepicker_sv_min_js = "~/Scripts/locales/bootstrap-datepicker.sv.min.js"; 
                    public const string bootstrap_datepicker_sw_min_js = "~/Scripts/locales/bootstrap-datepicker.sw.min.js"; 
                    public const string bootstrap_datepicker_th_min_js = "~/Scripts/locales/bootstrap-datepicker.th.min.js"; 
                    public const string bootstrap_datepicker_tr_min_js = "~/Scripts/locales/bootstrap-datepicker.tr.min.js"; 
                    public const string bootstrap_datepicker_uk_min_js = "~/Scripts/locales/bootstrap-datepicker.uk.min.js"; 
                    public const string bootstrap_datepicker_vi_min_js = "~/Scripts/locales/bootstrap-datepicker.vi.min.js"; 
                    public const string bootstrap_datepicker_zh_CN_min_js = "~/Scripts/locales/bootstrap-datepicker.zh-CN.min.js"; 
                    public const string bootstrap_datepicker_zh_TW_min_js = "~/Scripts/locales/bootstrap-datepicker.zh-TW.min.js"; 
                }
            }
            public static partial class Prettify 
            {
                public static class Assets
                {
                    public const string lang_apollo_js = "~/Scripts/Prettify/lang-apollo.js"; 
                    public const string lang_basic_js = "~/Scripts/Prettify/lang-basic.js"; 
                    public const string lang_clj_js = "~/Scripts/Prettify/lang-clj.js"; 
                    public const string lang_css_js = "~/Scripts/Prettify/lang-css.js"; 
                    public const string lang_dart_js = "~/Scripts/Prettify/lang-dart.js"; 
                    public const string lang_erlang_js = "~/Scripts/Prettify/lang-erlang.js"; 
                    public const string lang_go_js = "~/Scripts/Prettify/lang-go.js"; 
                    public const string lang_hs_js = "~/Scripts/Prettify/lang-hs.js"; 
                    public const string lang_lisp_js = "~/Scripts/Prettify/lang-lisp.js"; 
                    public const string lang_llvm_js = "~/Scripts/Prettify/lang-llvm.js"; 
                    public const string lang_lua_js = "~/Scripts/Prettify/lang-lua.js"; 
                    public const string lang_matlab_js = "~/Scripts/Prettify/lang-matlab.js"; 
                    public const string lang_ml_js = "~/Scripts/Prettify/lang-ml.js"; 
                    public const string lang_mumps_js = "~/Scripts/Prettify/lang-mumps.js"; 
                    public const string lang_n_js = "~/Scripts/Prettify/lang-n.js"; 
                    public const string lang_pascal_js = "~/Scripts/Prettify/lang-pascal.js"; 
                    public const string lang_proto_js = "~/Scripts/Prettify/lang-proto.js"; 
                    public const string lang_r_js = "~/Scripts/Prettify/lang-r.js"; 
                    public const string lang_rd_js = "~/Scripts/Prettify/lang-rd.js"; 
                    public const string lang_scala_js = "~/Scripts/Prettify/lang-scala.js"; 
                    public const string lang_sql_js = "~/Scripts/Prettify/lang-sql.js"; 
                    public const string lang_tcl_js = "~/Scripts/Prettify/lang-tcl.js"; 
                    public const string lang_tex_js = "~/Scripts/Prettify/lang-tex.js"; 
                    public const string lang_vb_js = "~/Scripts/Prettify/lang-vb.js"; 
                    public const string lang_vhdl_js = "~/Scripts/Prettify/lang-vhdl.js"; 
                    public const string lang_wiki_js = "~/Scripts/Prettify/lang-wiki.js"; 
                    public const string lang_xq_js = "~/Scripts/Prettify/lang-xq.js"; 
                    public const string lang_yaml_js = "~/Scripts/Prettify/lang-yaml.js"; 
                    public const string prettify_js = "~/Scripts/Prettify/prettify.js"; 
                    public const string run_prettify_js = "~/Scripts/Prettify/run_prettify.js"; 
                }
            }
            public static class Assets
            {
                public const string _references_js = "~/Scripts/_references.js"; 
                public const string bootstrap_datepicker_js = "~/Scripts/bootstrap-datepicker.js"; 
                public const string bootstrap_datepicker_min_js = "~/Scripts/bootstrap-datepicker.min.js"; 
                public const string bootstrap_js = "~/Scripts/bootstrap.js"; 
                public const string bootstrap_min_js = "~/Scripts/bootstrap.min.js"; 
                public const string bootstrap_typeahead_js = "~/Scripts/bootstrap.typeahead.js"; 
                public const string hyperslackers_bootstrap_js = "~/Scripts/hyperslackers.bootstrap.js"; 
                public const string jquery_1_11_3_intellisense_js = "~/Scripts/jquery-1.11.3.intellisense.js"; 
                public const string jquery_1_11_3_js = "~/Scripts/jquery-1.11.3.js"; 
                public const string jquery_1_11_3_min_js = "~/Scripts/jquery-1.11.3.min.js"; 
                public const string jquery_validate_js = "~/Scripts/jquery.validate.js"; 
                public const string jquery_validate_min_js = "~/Scripts/jquery.validate.min.js"; 
                public const string jquery_validate_unobtrusive_js = "~/Scripts/jquery.validate.unobtrusive.js"; 
                public const string jquery_validate_unobtrusive_min_js = "~/Scripts/jquery.validate.unobtrusive.min.js"; 
                public const string modernizr_2_6_2_js = "~/Scripts/modernizr-2.6.2.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
                public const string respond_js = "~/Scripts/respond.js"; 
                public const string respond_matchmedia_addListener_js = "~/Scripts/respond.matchmedia.addListener.js"; 
                public const string respond_matchmedia_addListener_min_js = "~/Scripts/respond.matchmedia.addListener.min.js"; 
                public const string respond_min_js = "~/Scripts/respond.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class bootstrap_themes 
            {
                public static partial class amelia 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string amelia_css = "~/Content/bootstrap-themes/amelia.css";
                    public const string amelia_min_css = "~/Content/bootstrap-themes/amelia.min.css";
                    public const string darkly_min_css = "~/Content/bootstrap-themes/darkly.min.css";
                    public const string default_css = "~/Content/bootstrap-themes/default.css";
                    public const string default_min_css = "~/Content/bootstrap-themes/default.min.css";
                }
            }
            public static partial class bootswatch 
            {
                public static partial class cerulean 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/cerulean/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/cerulean/bootstrap.min.css";
                    }
                }
                public static partial class cosmo 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/cosmo/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/cosmo/bootstrap.min.css";
                    }
                }
                public static partial class cyborg 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/cyborg/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/cyborg/bootstrap.min.css";
                    }
                }
                public static partial class darkly 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/darkly/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/darkly/bootstrap.min.css";
                    }
                }
                public static partial class flatly 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/flatly/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/flatly/bootstrap.min.css";
                    }
                }
                public static partial class journal 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/journal/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/journal/bootstrap.min.css";
                    }
                }
                public static partial class lumen 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/lumen/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/lumen/bootstrap.min.css";
                    }
                }
                public static partial class paper 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/paper/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/paper/bootstrap.min.css";
                    }
                }
                public static partial class readable 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/readable/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/readable/bootstrap.min.css";
                    }
                }
                public static partial class sandstone 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/sandstone/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/sandstone/bootstrap.min.css";
                    }
                }
                public static partial class simplex 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/simplex/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/simplex/bootstrap.min.css";
                    }
                }
                public static partial class slate 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/slate/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/slate/bootstrap.min.css";
                    }
                }
                public static partial class spacelab 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/spacelab/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/spacelab/bootstrap.min.css";
                    }
                }
                public static partial class superhero 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/superhero/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/superhero/bootstrap.min.css";
                    }
                }
                public static partial class united 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/united/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/united/bootstrap.min.css";
                    }
                }
                public static partial class yeti 
                {
                    public static class Assets
                    {
                        public const string bootstrap_css = "~/Content/bootswatch/yeti/bootstrap.css";
                        public const string bootstrap_min_css = "~/Content/bootswatch/yeti/bootstrap.min.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class DataTables 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string autoFill_bootstrap_css = "~/Content/DataTables/css/autoFill.bootstrap.css";
                        public const string autoFill_bootstrap_min_css = "~/Content/DataTables/css/autoFill.bootstrap.min.css";
                        public const string autoFill_dataTables_css = "~/Content/DataTables/css/autoFill.dataTables.css";
                        public const string autoFill_dataTables_min_css = "~/Content/DataTables/css/autoFill.dataTables.min.css";
                        public const string autoFill_foundation_css = "~/Content/DataTables/css/autoFill.foundation.css";
                        public const string autoFill_foundation_min_css = "~/Content/DataTables/css/autoFill.foundation.min.css";
                        public const string autoFill_jqueryui_css = "~/Content/DataTables/css/autoFill.jqueryui.css";
                        public const string autoFill_jqueryui_min_css = "~/Content/DataTables/css/autoFill.jqueryui.min.css";
                        public const string buttons_bootstrap_css = "~/Content/DataTables/css/buttons.bootstrap.css";
                        public const string buttons_bootstrap_min_css = "~/Content/DataTables/css/buttons.bootstrap.min.css";
                        public const string buttons_bootstrap4_css = "~/Content/DataTables/css/buttons.bootstrap4.css";
                        public const string buttons_bootstrap4_min_css = "~/Content/DataTables/css/buttons.bootstrap4.min.css";
                        public const string buttons_dataTables_css = "~/Content/DataTables/css/buttons.dataTables.css";
                        public const string buttons_dataTables_min_css = "~/Content/DataTables/css/buttons.dataTables.min.css";
                        public const string buttons_foundation_css = "~/Content/DataTables/css/buttons.foundation.css";
                        public const string buttons_foundation_min_css = "~/Content/DataTables/css/buttons.foundation.min.css";
                        public const string buttons_jqueryui_css = "~/Content/DataTables/css/buttons.jqueryui.css";
                        public const string buttons_jqueryui_min_css = "~/Content/DataTables/css/buttons.jqueryui.min.css";
                        public const string colReorder_bootstrap_css = "~/Content/DataTables/css/colReorder.bootstrap.css";
                        public const string colReorder_bootstrap_min_css = "~/Content/DataTables/css/colReorder.bootstrap.min.css";
                        public const string colReorder_dataTables_css = "~/Content/DataTables/css/colReorder.dataTables.css";
                        public const string colReorder_dataTables_min_css = "~/Content/DataTables/css/colReorder.dataTables.min.css";
                        public const string colReorder_foundation_css = "~/Content/DataTables/css/colReorder.foundation.css";
                        public const string colReorder_foundation_min_css = "~/Content/DataTables/css/colReorder.foundation.min.css";
                        public const string colReorder_jqueryui_css = "~/Content/DataTables/css/colReorder.jqueryui.css";
                        public const string colReorder_jqueryui_min_css = "~/Content/DataTables/css/colReorder.jqueryui.min.css";
                        public const string dataTables_bootstrap_css = "~/Content/DataTables/css/dataTables.bootstrap.css";
                        public const string dataTables_bootstrap_min_css = "~/Content/DataTables/css/dataTables.bootstrap.min.css";
                        public const string dataTables_bootstrap4_css = "~/Content/DataTables/css/dataTables.bootstrap4.css";
                        public const string dataTables_bootstrap4_min_css = "~/Content/DataTables/css/dataTables.bootstrap4.min.css";
                        public const string dataTables_foundation_css = "~/Content/DataTables/css/dataTables.foundation.css";
                        public const string dataTables_foundation_min_css = "~/Content/DataTables/css/dataTables.foundation.min.css";
                        public const string dataTables_jqueryui_css = "~/Content/DataTables/css/dataTables.jqueryui.css";
                        public const string dataTables_jqueryui_min_css = "~/Content/DataTables/css/dataTables.jqueryui.min.css";
                        public const string dataTables_material_css = "~/Content/DataTables/css/dataTables.material.css";
                        public const string dataTables_material_min_css = "~/Content/DataTables/css/dataTables.material.min.css";
                        public const string dataTables_semanticui_css = "~/Content/DataTables/css/dataTables.semanticui.css";
                        public const string dataTables_semanticui_min_css = "~/Content/DataTables/css/dataTables.semanticui.min.css";
                        public const string dataTables_uikit_css = "~/Content/DataTables/css/dataTables.uikit.css";
                        public const string dataTables_uikit_min_css = "~/Content/DataTables/css/dataTables.uikit.min.css";
                        public const string fixedColumns_bootstrap_css = "~/Content/DataTables/css/fixedColumns.bootstrap.css";
                        public const string fixedColumns_bootstrap_min_css = "~/Content/DataTables/css/fixedColumns.bootstrap.min.css";
                        public const string fixedColumns_dataTables_css = "~/Content/DataTables/css/fixedColumns.dataTables.css";
                        public const string fixedColumns_dataTables_min_css = "~/Content/DataTables/css/fixedColumns.dataTables.min.css";
                        public const string fixedColumns_foundation_css = "~/Content/DataTables/css/fixedColumns.foundation.css";
                        public const string fixedColumns_foundation_min_css = "~/Content/DataTables/css/fixedColumns.foundation.min.css";
                        public const string fixedColumns_jqueryui_css = "~/Content/DataTables/css/fixedColumns.jqueryui.css";
                        public const string fixedColumns_jqueryui_min_css = "~/Content/DataTables/css/fixedColumns.jqueryui.min.css";
                        public const string fixedHeader_bootstrap_css = "~/Content/DataTables/css/fixedHeader.bootstrap.css";
                        public const string fixedHeader_bootstrap_min_css = "~/Content/DataTables/css/fixedHeader.bootstrap.min.css";
                        public const string fixedHeader_dataTables_css = "~/Content/DataTables/css/fixedHeader.dataTables.css";
                        public const string fixedHeader_dataTables_min_css = "~/Content/DataTables/css/fixedHeader.dataTables.min.css";
                        public const string fixedHeader_foundation_css = "~/Content/DataTables/css/fixedHeader.foundation.css";
                        public const string fixedHeader_foundation_min_css = "~/Content/DataTables/css/fixedHeader.foundation.min.css";
                        public const string fixedHeader_jqueryui_css = "~/Content/DataTables/css/fixedHeader.jqueryui.css";
                        public const string fixedHeader_jqueryui_min_css = "~/Content/DataTables/css/fixedHeader.jqueryui.min.css";
                        public const string jquery_dataTables_css = "~/Content/DataTables/css/jquery.dataTables.css";
                        public const string jquery_dataTables_min_css = "~/Content/DataTables/css/jquery.dataTables.min.css";
                        public const string jquery_dataTables_themeroller_css = "~/Content/DataTables/css/jquery.dataTables_themeroller.css";
                        public const string keyTable_bootstrap_css = "~/Content/DataTables/css/keyTable.bootstrap.css";
                        public const string keyTable_bootstrap_min_css = "~/Content/DataTables/css/keyTable.bootstrap.min.css";
                        public const string keyTable_dataTables_css = "~/Content/DataTables/css/keyTable.dataTables.css";
                        public const string keyTable_dataTables_min_css = "~/Content/DataTables/css/keyTable.dataTables.min.css";
                        public const string keyTable_foundation_css = "~/Content/DataTables/css/keyTable.foundation.css";
                        public const string keyTable_foundation_min_css = "~/Content/DataTables/css/keyTable.foundation.min.css";
                        public const string keyTable_jqueryui_css = "~/Content/DataTables/css/keyTable.jqueryui.css";
                        public const string keyTable_jqueryui_min_css = "~/Content/DataTables/css/keyTable.jqueryui.min.css";
                        public const string responsive_bootstrap_css = "~/Content/DataTables/css/responsive.bootstrap.css";
                        public const string responsive_bootstrap_min_css = "~/Content/DataTables/css/responsive.bootstrap.min.css";
                        public const string responsive_dataTables_css = "~/Content/DataTables/css/responsive.dataTables.css";
                        public const string responsive_dataTables_min_css = "~/Content/DataTables/css/responsive.dataTables.min.css";
                        public const string responsive_foundation_css = "~/Content/DataTables/css/responsive.foundation.css";
                        public const string responsive_foundation_min_css = "~/Content/DataTables/css/responsive.foundation.min.css";
                        public const string responsive_jqueryui_css = "~/Content/DataTables/css/responsive.jqueryui.css";
                        public const string responsive_jqueryui_min_css = "~/Content/DataTables/css/responsive.jqueryui.min.css";
                        public const string rowReorder_bootstrap_css = "~/Content/DataTables/css/rowReorder.bootstrap.css";
                        public const string rowReorder_bootstrap_min_css = "~/Content/DataTables/css/rowReorder.bootstrap.min.css";
                        public const string rowReorder_dataTables_css = "~/Content/DataTables/css/rowReorder.dataTables.css";
                        public const string rowReorder_dataTables_min_css = "~/Content/DataTables/css/rowReorder.dataTables.min.css";
                        public const string rowReorder_foundation_css = "~/Content/DataTables/css/rowReorder.foundation.css";
                        public const string rowReorder_foundation_min_css = "~/Content/DataTables/css/rowReorder.foundation.min.css";
                        public const string rowReorder_jqueryui_css = "~/Content/DataTables/css/rowReorder.jqueryui.css";
                        public const string rowReorder_jqueryui_min_css = "~/Content/DataTables/css/rowReorder.jqueryui.min.css";
                        public const string scroller_bootstrap_css = "~/Content/DataTables/css/scroller.bootstrap.css";
                        public const string scroller_bootstrap_min_css = "~/Content/DataTables/css/scroller.bootstrap.min.css";
                        public const string scroller_dataTables_css = "~/Content/DataTables/css/scroller.dataTables.css";
                        public const string scroller_dataTables_min_css = "~/Content/DataTables/css/scroller.dataTables.min.css";
                        public const string scroller_foundation_css = "~/Content/DataTables/css/scroller.foundation.css";
                        public const string scroller_foundation_min_css = "~/Content/DataTables/css/scroller.foundation.min.css";
                        public const string scroller_jqueryui_css = "~/Content/DataTables/css/scroller.jqueryui.css";
                        public const string scroller_jqueryui_min_css = "~/Content/DataTables/css/scroller.jqueryui.min.css";
                        public const string select_bootstrap_css = "~/Content/DataTables/css/select.bootstrap.css";
                        public const string select_bootstrap_min_css = "~/Content/DataTables/css/select.bootstrap.min.css";
                        public const string select_dataTables_css = "~/Content/DataTables/css/select.dataTables.css";
                        public const string select_dataTables_min_css = "~/Content/DataTables/css/select.dataTables.min.css";
                        public const string select_foundation_css = "~/Content/DataTables/css/select.foundation.css";
                        public const string select_foundation_min_css = "~/Content/DataTables/css/select.foundation.min.css";
                        public const string select_jqueryui_css = "~/Content/DataTables/css/select.jqueryui.css";
                        public const string select_jqueryui_min_css = "~/Content/DataTables/css/select.jqueryui.min.css";
                    }
                }
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class swf 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class DataTables_1_10_1 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public const string dataTables_tableTools_css = "~/Content/DataTables-1.10.1/css/dataTables.tableTools.css";
                        public const string dataTables_tableTools_min_css = "~/Content/DataTables-1.10.1/css/dataTables.tableTools.min.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class Prettify 
            {
                public static partial class Themes 
                {
                    public static class Assets
                    {
                        public const string desert_css = "~/Content/Prettify/Themes/desert.css";
                        public const string doxy_css = "~/Content/Prettify/Themes/doxy.css";
                        public const string sons_of_obsidian_css = "~/Content/Prettify/Themes/sons-of-obsidian.css";
                        public const string sunburst_css = "~/Content/Prettify/Themes/sunburst.css";
                    }
                }
                public static class Assets
                {
                    public const string prettify_css = "~/Content/Prettify/prettify.css";
                }
            }
            public static class Assets
            {
                public const string bootstrap_datepicker_css = "~/Content/bootstrap-datepicker.css";
                public const string bootstrap_datepicker_min_css = "~/Content/bootstrap-datepicker.min.css";
                public const string bootstrap_datepicker_standalone_css = "~/Content/bootstrap-datepicker.standalone.css";
                public const string bootstrap_datepicker_standalone_min_css = "~/Content/bootstrap-datepicker.standalone.min.css";
                public const string bootstrap_datepicker3_css = "~/Content/bootstrap-datepicker3.css";
                public const string bootstrap_datepicker3_min_css = "~/Content/bootstrap-datepicker3.min.css";
                public const string bootstrap_datepicker3_standalone_css = "~/Content/bootstrap-datepicker3.standalone.css";
                public const string bootstrap_datepicker3_standalone_min_css = "~/Content/bootstrap-datepicker3.standalone.min.css";
                public const string bootstrap_theme_css = "~/Content/bootstrap-theme.css";
                public const string bootstrap_theme_min_css = "~/Content/bootstrap-theme.min.css";
                public const string bootstrap_css = "~/Content/bootstrap.css";
                public const string bootstrap_min_css = "~/Content/bootstrap.min.css";
                public const string font_awesome_css = "~/Content/font-awesome.css";
                public const string font_awesome_min_css = "~/Content/font-awesome.min.css";
                public const string hyperslackers_bootstrap3_css = "~/Content/hyperslackers-bootstrap3.css";
                public const string Site_css = "~/Content/Site.css";
            }
        }
        public static partial class Images 
        {
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


