
// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Host.TemplateFile = C:\Dev\HyperSlackers\HyperSlackers.Bootstrap\BootstrapDemoResources\T4resx.tt

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

namespace Localized
{
	using SmartFormat;
	using System;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.Diagnostics;
	using System.Linq;
	using System.Reflection;
	using System.Runtime.CompilerServices;
	using System.Text;
	using System.Threading;
	using System.Threading.Tasks;
	using System.Web;
	using System.Web.Mvc;

	[DebuggerNonUserCodeAttribute()]
	[CompilerGeneratedAttribute()]
	public static class Enums
	{
		#region Resource Manager
		
		private static global::System.Resources.ResourceManager resourceMan;
	
		/// <summary> Returns the cached ResourceManager instance used by this class. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager 
		{
			get
			{
				if (object.ReferenceEquals(Enums.resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localized.Enums", typeof(Enums).Assembly);
					// ???? global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("", typeof().Assembly);
					resourceMan = temp;
				}
			
				return resourceMan;
			}
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static string GetResourceString(string key)
		{
			var culture = Thread.CurrentThread.CurrentCulture;
			var str = ResourceManager.GetString(key, culture);
			
			return str;
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static HtmlString GetResourceHtmlString(string key)
		{
			var str = GetResourceString(key);
			
			return new HtmlString(str);
		}
		
		#endregion Resource Manager
		
		#region Keys
		
		/// <summary> Create </summary>
		public static string DataTableButtonType_Create { get { return GetResourceString("DataTableButtonType_Create"); } }
		/// <summary> Delete </summary>
		public static string DataTableButtonType_Delete { get { return GetResourceString("DataTableButtonType_Delete"); } }
		/// <summary> Details </summary>
		public static string DataTableButtonType_Details { get { return GetResourceString("DataTableButtonType_Details"); } }
		/// <summary> Edit </summary>
		public static string DataTableButtonType_Edit { get { return GetResourceString("DataTableButtonType_Edit"); } }
		/// <summary> Manage </summary>
		public static string DataTableButtonType_Manage { get { return GetResourceString("DataTableButtonType_Manage"); } }
		/// <summary> Administrator </summary>
		public static string RoleType_Admin { get { return GetResourceString("RoleType_Admin"); } }
		/// <summary> None </summary>
		public static string RoleType_None { get { return GetResourceString("RoleType_None"); } }
		/// <summary> Superuser </summary>
		public static string RoleType_Super { get { return GetResourceString("RoleType_Super"); } }
		
		#endregion Keys
		
		#region Key Names
		
		public static class KeyNames
		{
			public const string DataTableButtonType_Create = "DataTableButtonType_Create";
			public const string DataTableButtonType_Delete = "DataTableButtonType_Delete";
			public const string DataTableButtonType_Details = "DataTableButtonType_Details";
			public const string DataTableButtonType_Edit = "DataTableButtonType_Edit";
			public const string DataTableButtonType_Manage = "DataTableButtonType_Manage";
			public const string RoleType_Admin = "RoleType_Admin";
			public const string RoleType_None = "RoleType_None";
			public const string RoleType_Super = "RoleType_Super";
		}
		
		#endregion Key Names
	}
	

	[DebuggerNonUserCodeAttribute()]
	[CompilerGeneratedAttribute()]
	public static class Exceptions
	{
		#region Resource Manager
		
		private static global::System.Resources.ResourceManager resourceMan;
	
		/// <summary> Returns the cached ResourceManager instance used by this class. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager 
		{
			get
			{
				if (object.ReferenceEquals(Exceptions.resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localized.Exceptions", typeof(Exceptions).Assembly);
					// ???? global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("", typeof().Assembly);
					resourceMan = temp;
				}
			
				return resourceMan;
			}
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static string GetResourceString(string key)
		{
			var culture = Thread.CurrentThread.CurrentCulture;
			var str = ResourceManager.GetString(key, culture);
			
			return str;
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static HtmlString GetResourceHtmlString(string key)
		{
			var str = GetResourceString(key);
			
			return new HtmlString(str);
		}
		
		#endregion Resource Manager
		
		#region Keys
		
		/// <summary> Cannot create a duplicate {itemName}. </summary>
		public static string CannotCreateDuplicate_Item(string itemName) { return Smart.Format(GetResourceString("CannotCreateDuplicate_Item"), new { itemName = itemName }); }
		/// <summary> {itemName} already exists. </summary>
		public static string Item_AlreadyExists(string itemName) { return Smart.Format(GetResourceString("Item_AlreadyExists"), new { itemName = itemName }); }
		/// <summary> {itemName} not found. </summary>
		public static string Item_NotFound(string itemName) { return Smart.Format(GetResourceString("Item_NotFound"), new { itemName = itemName }); }
		
		#endregion Keys
		
		#region Key Names
		
		public static class KeyNames
		{
			///<summary> PARAMS:{itemName} </summary>
			public const string CannotCreateDuplicate_Item = "CannotCreateDuplicate_Item";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_AlreadyExists = "Item_AlreadyExists";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_NotFound = "Item_NotFound";
		}
		
		#endregion Key Names
	}
	

	[DebuggerNonUserCodeAttribute()]
	[CompilerGeneratedAttribute()]
	public static class Models
	{
	}
	

	[DebuggerNonUserCodeAttribute()]
	[CompilerGeneratedAttribute()]
	public static class UI
	{
		#region Resource Manager
		
		private static global::System.Resources.ResourceManager resourceMan;
	
		/// <summary> Returns the cached ResourceManager instance used by this class. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager 
		{
			get
			{
				if (object.ReferenceEquals(UI.resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localized.UI", typeof(UI).Assembly);
					// ???? global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("", typeof().Assembly);
					resourceMan = temp;
				}
			
				return resourceMan;
			}
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static string GetResourceString(string key)
		{
			var culture = Thread.CurrentThread.CurrentCulture;
			var str = ResourceManager.GetString(key, culture);
			
			return str;
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static HtmlString GetResourceHtmlString(string key)
		{
			var str = GetResourceString(key);
			
			return new HtmlString(str);
		}
		
		#endregion Resource Manager
		
		#region Keys
		
		/// <summary> About </summary>
		public static string About { get { return GetResourceString("About"); } }
		/// <summary> Add </summary>
		public static string Add { get { return GetResourceString("Add"); } }
		/// <summary> Add {itemName} </summary>
		public static string Add_Item(string itemName) { return Smart.Format(GetResourceString("Add_Item"), new { itemName = itemName }); }
		/// <summary> Cancel </summary>
		public static string Cancel { get { return GetResourceString("Cancel"); } }
		/// <summary> Change </summary>
		public static string Change { get { return GetResourceString("Change"); } }
		/// <summary> Change {itemName} </summary>
		public static string Change_Item(string itemName) { return Smart.Format(GetResourceString("Change_Item"), new { itemName = itemName }); }
		/// <summary> Close </summary>
		public static string Close { get { return GetResourceString("Close"); } }
		/// <summary> &copy; {copyrightDate:yyyy} - HyperSlackers.com </summary>
		public static HtmlString Copyright_Text(DateTime copyrightDate) { return new HtmlString(Smart.Format(GetResourceString("Copyright_Text"), new { copyrightDate = copyrightDate })); }
		/// <summary> Create </summary>
		public static string Create { get { return GetResourceString("Create"); } }
		/// <summary> Create {itemName} </summary>
		public static string Create_Item(string itemName) { return Smart.Format(GetResourceString("Create_Item"), new { itemName = itemName }); }
		/// <summary> Delete </summary>
		public static string Delete { get { return GetResourceString("Delete"); } }
		/// <summary> Delete {itemName} </summary>
		public static string Delete_Item(string itemName) { return Smart.Format(GetResourceString("Delete_Item"), new { itemName = itemName }); }
		/// <summary> Details </summary>
		public static string Details { get { return GetResourceString("Details"); } }
		/// <summary> Edit </summary>
		public static string Edit { get { return GetResourceString("Edit"); } }
		/// <summary> Edit {itemName} </summary>
		public static string Edit_Item(string itemName) { return Smart.Format(GetResourceString("Edit_Item"), new { itemName = itemName }); }
		/// <summary> Home </summary>
		public static string Home { get { return GetResourceString("Home"); } }
		/// <summary> {itemName} Details </summary>
		public static string Item_Details(string itemName) { return Smart.Format(GetResourceString("Item_Details"), new { itemName = itemName }); }
		/// <summary> {itemName} History </summary>
		public static string Item_History(string itemName) { return Smart.Format(GetResourceString("Item_History"), new { itemName = itemName }); }
		/// <summary> {itemName} Info </summary>
		public static string Item_Info(string itemName) { return Smart.Format(GetResourceString("Item_Info"), new { itemName = itemName }); }
		/// <summary> {itemName} List </summary>
		public static string Item_List(string itemName) { return Smart.Format(GetResourceString("Item_List"), new { itemName = itemName }); }
		/// <summary> {itemName} Listing </summary>
		public static string Item_Listing(string itemName) { return Smart.Format(GetResourceString("Item_Listing"), new { itemName = itemName }); }
		/// <summary> {itemName} Management </summary>
		public static string Item_Management(string itemName) { return Smart.Format(GetResourceString("Item_Management"), new { itemName = itemName }); }
		/// <summary> {itemName} is unavailable </summary>
		public static string Item_Unavailable(string itemName) { return Smart.Format(GetResourceString("Item_Unavailable"), new { itemName = itemName }); }
		/// <summary> Listing </summary>
		public static string Listing { get { return GetResourceString("Listing"); } }
		/// <summary> Loading... </summary>
		public static string Loading { get { return GetResourceString("Loading"); } }
		/// <summary> Log In </summary>
		public static string LogIn { get { return GetResourceString("LogIn"); } }
		/// <summary> Manage </summary>
		public static string Manage { get { return GetResourceString("Manage"); } }
		/// <summary> Manage {itemName} </summary>
		public static string Manage_Item(string itemName) { return Smart.Format(GetResourceString("Manage_Item"), new { itemName = itemName }); }
		/// <summary> Password </summary>
		public static string Password { get { return GetResourceString("Password"); } }
		/// <summary> Remove </summary>
		public static string Remove { get { return GetResourceString("Remove"); } }
		/// <summary> Rows &amp; Columns (Grid System) </summary>
		public static string RowsAndColumns { get { return GetResourceString("RowsAndColumns"); } }
		/// <summary> Save </summary>
		public static string Save { get { return GetResourceString("Save"); } }
		/// <summary> Save Changes </summary>
		public static string SaveChanges { get { return GetResourceString("SaveChanges"); } }
		/// <summary> Successfully saved changes. </summary>
		public static string Save_Success_Message { get { return GetResourceString("Save_Success_Message"); } }
		/// <summary> Select </summary>
		public static string Select { get { return GetResourceString("Select"); } }
		/// <summary> Select {itemName} </summary>
		public static string Select_Item(string itemName) { return Smart.Format(GetResourceString("Select_Item"), new { itemName = itemName }); }
		/// <summary> Submit </summary>
		public static string Submit { get { return GetResourceString("Submit"); } }
		/// <summary> Update </summary>
		public static string Update { get { return GetResourceString("Update"); } }
		/// <summary> Update {itemName} </summary>
		public static string Update_Item(string itemName) { return Smart.Format(GetResourceString("Update_Item"), new { itemName = itemName }); }
		
		#endregion Keys
		
		#region Key Names
		
		public static class KeyNames
		{
			public const string About = "About";
			public const string Add = "Add";
			///<summary> PARAMS:{itemName} </summary>
			public const string Add_Item = "Add_Item";
			public const string Cancel = "Cancel";
			public const string Change = "Change";
			///<summary> PARAMS:{itemName} </summary>
			public const string Change_Item = "Change_Item";
			public const string Close = "Close";
			///<summary> HTML:PARAMS:{(DateTime)copyrightDate} </summary>
			public const string Copyright_Text = "Copyright_Text";
			public const string Create = "Create";
			///<summary> PARAMS:{itemName} </summary>
			public const string Create_Item = "Create_Item";
			public const string Delete = "Delete";
			///<summary> PARAMS:{itemName} </summary>
			public const string Delete_Item = "Delete_Item";
			public const string Details = "Details";
			public const string Edit = "Edit";
			///<summary> PARAMS:{itemName} </summary>
			public const string Edit_Item = "Edit_Item";
			public const string Home = "Home";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_Details = "Item_Details";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_History = "Item_History";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_Info = "Item_Info";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_List = "Item_List";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_Listing = "Item_Listing";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_Management = "Item_Management";
			///<summary> PARAMS:{itemName} </summary>
			public const string Item_Unavailable = "Item_Unavailable";
			public const string Listing = "Listing";
			public const string Loading = "Loading";
			public const string LogIn = "LogIn";
			public const string Manage = "Manage";
			///<summary> PARAMS:{itemName} </summary>
			public const string Manage_Item = "Manage_Item";
			public const string Password = "Password";
			public const string Remove = "Remove";
			public const string RowsAndColumns = "RowsAndColumns";
			public const string Save = "Save";
			public const string SaveChanges = "SaveChanges";
			public const string Save_Success_Message = "Save_Success_Message";
			public const string Select = "Select";
			///<summary> PARAMS:{itemName} </summary>
			public const string Select_Item = "Select_Item";
			public const string Submit = "Submit";
			public const string Update = "Update";
			///<summary> PARAMS:{itemName} </summary>
			public const string Update_Item = "Update_Item";
		}
		
		#endregion Key Names
	}
	

	[DebuggerNonUserCodeAttribute()]
	[CompilerGeneratedAttribute()]
	public static class Validation
	{
		#region Resource Manager
		
		private static global::System.Resources.ResourceManager resourceMan;
	
		/// <summary> Returns the cached ResourceManager instance used by this class. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal static global::System.Resources.ResourceManager ResourceManager 
		{
			get
			{
				if (object.ReferenceEquals(Validation.resourceMan, null))
				{
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Localized.Validation", typeof(Validation).Assembly);
					// ???? global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("", typeof().Assembly);
					resourceMan = temp;
				}
			
				return resourceMan;
			}
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static string GetResourceString(string key)
		{
			var culture = Thread.CurrentThread.CurrentCulture;
			var str = ResourceManager.GetString(key, culture);
			
			return str;
		}
		
		/// <summary> Returns the formatted resource string. </summary>
		[global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static HtmlString GetResourceHtmlString(string key)
		{
			var str = GetResourceString(key);
			
			return new HtmlString(str);
		}
		
		#endregion Resource Manager
		
		#region Keys
		
		/// <summary> {0} does not match {1}. </summary>
		public static string Error_Compare { get { return GetResourceString("Error_Compare"); } }
		/// <summary> {0} is not a valid credit card number. </summary>
		public static string Error_CreditCard { get { return GetResourceString("Error_CreditCard"); } }
		/// <summary> {0} is not a valid email address. </summary>
		public static string Error_EmailAddress { get { return GetResourceString("Error_EmailAddress"); } }
		/// <summary> {0} is not a valid file. </summary>
		public static string Error_FileExtensions { get { return GetResourceString("Error_FileExtensions"); } }
		/// <summary> {0} can be at most {1} characters long. </summary>
		public static string Error_MaxLength { get { return GetResourceString("Error_MaxLength"); } }
		/// <summary> {0} can be at most {1}. </summary>
		public static string Error_MaxValue { get { return GetResourceString("Error_MaxValue"); } }
		/// <summary> {0} does not meet the password requirements. </summary>
		public static string Error_MembershipPassword { get { return GetResourceString("Error_MembershipPassword"); } }
		/// <summary> {0} must be at least {1} characters long. </summary>
		public static string Error_MinLength { get { return GetResourceString("Error_MinLength"); } }
		/// <summary> {0} must be at least {1}. </summary>
		public static string Error_MinValue { get { return GetResourceString("Error_MinValue"); } }
		/// <summary> {0} is not a valid phone number. </summary>
		public static string Error_Phone { get { return GetResourceString("Error_Phone"); } }
		/// <summary> {0} must be between {1} and {2}. </summary>
		public static string Error_Range { get { return GetResourceString("Error_Range"); } }
		/// <summary> {0} failed validation. </summary>
		public static string Error_RegularExpression { get { return GetResourceString("Error_RegularExpression"); } }
		/// <summary> {0} is required. </summary>
		public static string Error_Required { get { return GetResourceString("Error_Required"); } }
		/// <summary> {0} must be between {1} and {2} characters long. </summary>
		public static string Error_StringLength { get { return GetResourceString("Error_StringLength"); } }
		/// <summary> {0} can be at most {2} characters long. </summary>
		public static string Error_StringLengthMax { get { return GetResourceString("Error_StringLengthMax"); } }
		/// <summary> {0} is not a valid URL. </summary>
		public static string Error_Url { get { return GetResourceString("Error_Url"); } }
		
		#endregion Keys
		
		#region Key Names
		
		public static class KeyNames
		{
			public const string Error_Compare = "Error_Compare";
			public const string Error_CreditCard = "Error_CreditCard";
			public const string Error_EmailAddress = "Error_EmailAddress";
			public const string Error_FileExtensions = "Error_FileExtensions";
			public const string Error_MaxLength = "Error_MaxLength";
			public const string Error_MaxValue = "Error_MaxValue";
			public const string Error_MembershipPassword = "Error_MembershipPassword";
			public const string Error_MinLength = "Error_MinLength";
			public const string Error_MinValue = "Error_MinValue";
			public const string Error_Phone = "Error_Phone";
			public const string Error_Range = "Error_Range";
			public const string Error_RegularExpression = "Error_RegularExpression";
			public const string Error_Required = "Error_Required";
			public const string Error_StringLength = "Error_StringLength";
			public const string Error_StringLengthMax = "Error_StringLengthMax";
			public const string Error_Url = "Error_Url";
		}
		
		#endregion Key Names
	}
	

}

